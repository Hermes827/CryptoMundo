{"ast":null,"code":"var _jsxFileName = \"/Users/chriscable/Desktop/projects/CryptoMundo/frontend/src/App.js\";\nimport React from 'react';\nimport Login from './components/login';\nimport Dashboard from './components/Dashboard';\nimport NewUserForm from './components/NewUserForm';\nimport { Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport centerConsole from './containers/centerConsole';\nimport EditUserContainer from './containers/EditUserContainer';\nimport './App.css';\nimport UserCryptosContainer from './containers/UserCryptosContainer';\nimport UserCryptoDetailedView from './components/UserCryptoDetailedView';\nimport NewsContainer from './containers/newsContainer';\nimport ArticleView from './components/articleView';\nimport { NEWS_API } from './constants';\nimport { USER_URL } from './constants';\nimport { LOGIN_URL } from './constants';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.displayUserCryptos = () => {\n      if (!localStorage.token) {\n        return;\n      }\n\n      fetch(\"http://localhost:3000/api/v1/profile\", {\n        method: \"GET\",\n        headers: {\n          'Authorization': \"Bearer \" + localStorage.token\n        }\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          userCryptos: data.user.cryptos // cryptosAreLoading: false\n\n        });\n      });\n    };\n\n    this.setCurrentCrypto = crypto => {\n      this.setState({\n        currentCrypto: crypto,\n        lookingAtSingleCrypto: true\n      });\n      this.props.history.push('/my-crypto/' + crypto.id);\n    };\n\n    this.countCrypto = cc => {\n      const cryptos = [];\n      this.state.userCryptos.map(crypto => {\n        if (cc.name === crypto.name) {\n          cryptos.push(crypto);\n        }\n      });\n      return cryptos.length;\n    };\n\n    this.renderDetailedUserCryptoView = () => {\n      const _this$state = this.state,\n            userCryptos = _this$state.userCryptos,\n            currentCrypto = _this$state.currentCrypto,\n            lookingAtSingleCrypto = _this$state.lookingAtSingleCrypto;\n\n      if (lookingAtSingleCrypto === true) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(UserCryptoDetailedView, {\n          countCrypto: this.countCrypto,\n          currentCrypto: currentCrypto,\n          returnToUserCryptosContainer: this.returnToUserCryptosContainer,\n          deleteCrypto: this.deleteCrypto,\n          error: this.state.error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.returnToUserCryptosContainer = () => {\n      this.setState({\n        currentCrypto: null,\n        lookingAtSingleCrypto: false\n      });\n    };\n\n    this.returnToHomepageFromCryptosContainers = () => {\n      this.setState({\n        currentCrypto: null,\n        lookingAtSingleCrypto: false\n      });\n      this.props.history.push('/centerConsole');\n    };\n\n    this.deleteCrypto = crypto => {\n      fetch(\"http://localhost:3000/api/v1/remove_crypto/\" + crypto.id, {\n        method: \"DELETE\",\n        headers: {\n          'Authorization': \"Bearer \" + localStorage.token\n        },\n        body: JSON.stringify({\n          crypto_id: crypto.id\n        })\n      }).then(res => res.json()).then(data => {\n        let cryptoNames = data.user.cryptos.map(crypto => {\n          return crypto.name;\n        });\n\n        if (!cryptoNames.includes(crypto.name)) {\n          setTimeout(() => this.setState({\n            currentCrypto: null,\n            lookingAtSingleCrypto: false\n          }), 2000);\n        }\n\n        this.setError(\"Deleted \".concat(crypto.name, \" from Cryptos\"));\n        this.displayUserCryptos();\n      });\n    };\n\n    this.getNews = () => {\n      fetch(NEWS_API).then(res => res.json()).then(data => {\n        this.setState({\n          news: data.articles\n        });\n      });\n    };\n\n    this.setCurrentNewsArticle = article => {\n      this.setState({\n        currentNewsArticle: article,\n        lookingAtSingleNewsArticle: true\n      });\n    };\n\n    this.renderDetailedNewsView = () => {\n      const _this$state2 = this.state,\n            currentNewsArticle = _this$state2.currentNewsArticle,\n            lookingAtSingleNewsArticle = _this$state2.lookingAtSingleNewsArticle;\n\n      if (lookingAtSingleNewsArticle === true) {\n        return React.createElement(ArticleView, {\n          currentNewsArticle: currentNewsArticle,\n          returnToNewsContainer: this.returnToNewsContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.returnToNewsContainer = () => {\n      this.setState({\n        currentNewsArticle: null,\n        lookingAtSingleNewsArticle: false\n      });\n    };\n\n    this.returnToHomepageFromNewsContainer = () => {\n      this.setState({\n        currentNewsArticle: null,\n        lookingAtSingleNewsArticle: false\n      });\n      this.props.history.push('/centerConsole');\n    };\n\n    this.renderEditUser = () => {\n      if (this.state.hasClickedSettings === true) {\n        return React.createElement(EditUserContainer, {\n          current_user: this.state.current_user,\n          updateUser: this.updateUser,\n          deleteUser: this.deleteUser,\n          setEdit: this.setEdit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.setEdit = () => {\n      console.log(\"hello\");\n      this.setState({\n        hasClickedSettings: !this.state.hasClickedSettings\n      });\n      this.props.history.push('/centerConsole');\n    };\n\n    this.state = {\n      current_user: {},\n      error: \"\",\n      feedback: \"\",\n      userCryptos: [],\n      // hasClickedMyCryptos: false,\n      currentCrypto: {},\n      lookingAtSingleCrypto: false,\n      cryptosAreLoading: false,\n      news: [],\n      currentNewsArticle: {},\n      lookingAtSingleNewsArticle: false,\n      hasClickedSettings: false\n    };\n    this.createNewUser = this.createNewUser.bind(this);\n    this.attemptLogin = this.attemptLogin.bind(this);\n    this.setActiveUser = this.setActiveUser.bind(this);\n    this.logout = this.logout.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n    this.setError = this.setError.bind(this);\n    this.setFeedback = this.setFeedback.bind(this);\n    this.renewState();\n  }\n\n  setFeedback(str) {\n    this.setState({\n      feedback: str\n    });\n    setTimeout(() => this.setState({\n      feedback: \"\"\n    }), 1500);\n  }\n\n  setError(str) {\n    this.setState({\n      error: str\n    });\n    setTimeout(() => this.setState({\n      error: \"\"\n    }), 1500);\n  }\n\n  createNewUser(user) {\n    fetch(USER_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n      this.props.history.push('/centerConsole');\n    });\n  }\n\n  attemptLogin(user) {\n    fetch(LOGIN_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n\n      if (!data.message) {\n        this.props.history.push('/centerConsole');\n      }\n    });\n  }\n\n  setActiveUser(data, mode = \"hard\") {\n    if (data.message && mode === \"soft\") {\n      return;\n    } else if (data.message) {\n      this.setState({\n        error: data.message\n      });\n    } else {\n      this.setState({\n        current_user: data.user,\n        error: \"\"\n      });\n\n      if (data.jwt) {\n        localStorage.token = data.jwt;\n      }\n    }\n  }\n\n  logout() {\n    this.setState({\n      current_user: {},\n      // hasClickedMyCryptos: false,\n      currentCrypto: {},\n      lookingAtSingleCrypto: false\n    });\n    delete localStorage.token;\n    this.props.history.push('/login');\n  }\n\n  renewState() {\n    if (!localStorage.token) {\n      return;\n    }\n\n    fetch(\"http://localhost:3000/api/v1/profile\", {\n      method: \"GET\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    }).then(res => res.json()).then(data => this.setActiveUser(data, \"soft\"));\n  } ///////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////\n\n\n  updateUser(user) {\n    fetch(USER_URL + \"/\".concat(user.id), {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.token,\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n      this.props.history.push('/centerConsole');\n    });\n  }\n\n  deleteUser(id) {\n    fetch(USER_URL + \"/\".concat(id), {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    }).then(() => this.logout());\n  } // Usercrypto\n\n\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      render: () => React.createElement(Dashboard, {\n        current_user: this.state.current_user,\n        logout: this.logout,\n        displayUserCryptos: this.displayUserCryptos,\n        getNews: this.getNews,\n        setEdit: this.setEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/news\",\n      render: () => React.createElement(NewsContainer, {\n        returnToHomepageFromNewsContainer: this.returnToHomepageFromNewsContainer,\n        setCurrentNewsArticle: this.setCurrentNewsArticle,\n        news: this.state.news,\n        currentNewsArticle: this.state.currentNewsArticle,\n        lookingAtSingleNewsArticle: this.state.lookingAtSingleNewsArticle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }), this.renderDetailedNewsView(), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => React.createElement(Login, {\n        attemptLogin: this.attemptLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/user_signup\",\n      render: () => React.createElement(NewUserForm, {\n        createNewUser: this.createNewUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/my-crypto\",\n      render: () => React.createElement(UserCryptosContainer, {\n        returnToHomepageFromCryptosContainers: this.returnToHomepageFromCryptosContainers,\n        userCryptos: this.state.userCryptos,\n        setCurrentCrypto: this.setCurrentCrypto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), this.renderDetailedUserCryptoView(), React.createElement(Route, {\n      exact: true,\n      path: \"/centerConsole\",\n      render: () => React.createElement(centerConsole, {\n        setFeedback: this.setFeedback,\n        feedback: this.state.feedback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/update_profile\",\n      render: () => this.renderEditUser(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/chriscable/Desktop/projects/CryptoMundo/frontend/src/App.js"],"names":["React","Login","Dashboard","NewUserForm","Route","withRouter","centerConsole","EditUserContainer","UserCryptosContainer","UserCryptoDetailedView","NewsContainer","ArticleView","NEWS_API","USER_URL","LOGIN_URL","App","Component","constructor","props","displayUserCryptos","localStorage","token","fetch","method","headers","then","res","json","data","setState","userCryptos","user","cryptos","setCurrentCrypto","crypto","currentCrypto","lookingAtSingleCrypto","history","push","id","countCrypto","cc","state","map","name","length","renderDetailedUserCryptoView","returnToUserCryptosContainer","deleteCrypto","error","returnToHomepageFromCryptosContainers","body","JSON","stringify","crypto_id","cryptoNames","includes","setTimeout","setError","getNews","news","articles","setCurrentNewsArticle","article","currentNewsArticle","lookingAtSingleNewsArticle","renderDetailedNewsView","returnToNewsContainer","returnToHomepageFromNewsContainer","renderEditUser","hasClickedSettings","current_user","updateUser","deleteUser","setEdit","console","log","feedback","cryptosAreLoading","createNewUser","bind","attemptLogin","setActiveUser","logout","setFeedback","renewState","str","message","mode","jwt","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Login from './components/login';\nimport Dashboard from './components/Dashboard'\nimport NewUserForm from './components/NewUserForm'\nimport { Route } from 'react-router-dom';\nimport {withRouter} from 'react-router';\nimport centerConsole from './containers/centerConsole'\nimport EditUserContainer from './containers/EditUserContainer'\nimport './App.css';\nimport UserCryptosContainer from './containers/UserCryptosContainer'\nimport UserCryptoDetailedView from './components/UserCryptoDetailedView'\nimport NewsContainer from './containers/newsContainer'\nimport ArticleView from './components/articleView'\nimport {NEWS_API} from './constants'\nimport {USER_URL} from './constants'\nimport {LOGIN_URL} from './constants'\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      current_user: {},\n      error: \"\",\n      feedback: \"\",\n      userCryptos: [],\n      // hasClickedMyCryptos: false,\n      currentCrypto: {},\n      lookingAtSingleCrypto: false,\n      cryptosAreLoading: false,\n      news: [],\n      currentNewsArticle: {},\n      lookingAtSingleNewsArticle: false,\n      hasClickedSettings: false\n    }\n\n    this.createNewUser = this.createNewUser.bind(this)\n    this.attemptLogin = this.attemptLogin.bind(this)\n    this.setActiveUser = this.setActiveUser.bind(this)\n    this.logout = this.logout.bind(this)\n    this.updateUser = this.updateUser.bind(this)\n    this.deleteUser = this.deleteUser.bind(this)\n    this.setError = this.setError.bind(this)\n    this.setFeedback = this.setFeedback.bind(this)\n    this.renewState();\n  }\n\n  setFeedback(str){\n    this.setState({\n      feedback: str\n    })\n    setTimeout(() => this.setState({feedback: \"\"}), 1500)\n  }\n\n  setError(str){\n    this.setState({\n      error: str\n    })\n    setTimeout(() => this.setState({error: \"\"}), 1500)\n  }\n\n  createNewUser(user){\n    fetch(USER_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({user})\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      this.props.history.push('/centerConsole')\n    })\n  }\n\n  attemptLogin(user){\n    fetch(LOGIN_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({user})\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      if(!data.message){\n        this.props.history.push('/centerConsole')\n      }\n    })\n  }\n\n  setActiveUser(data, mode=\"hard\"){\n    if(data.message && mode === \"soft\"){\n      return\n    } else if(data.message){\n      this.setState({error: data.message})\n    } else {\n      this.setState({\n        current_user: data.user,\n        error: \"\"\n      })\n      if(data.jwt){localStorage.token = data.jwt}\n    }\n  }\n\n  logout(){\n    this.setState({\n      current_user: {},\n      // hasClickedMyCryptos: false,\n      currentCrypto: {},\n      lookingAtSingleCrypto: false\n    })\n    delete localStorage.token\n    this.props.history.push('/login')\n  }\n\n  renewState(){\n  if(!localStorage.token){return}\n  fetch(\"http://localhost:3000/api/v1/profile\", {\n    method: \"GET\",\n    headers: {\n      'Authorization': \"Bearer \" + localStorage.token\n    }\n  })\n  .then(res => res.json())\n  .then(data => this.setActiveUser(data, \"soft\"))\n}\n\n///////////////////////////////////////////////////////////////////////////////\n\n\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  updateUser(user){\n    fetch(USER_URL + `/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.token,\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      this.props.history.push('/centerConsole')\n    })\n  }\n\n  deleteUser(id){\n    fetch(USER_URL + `/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    })\n    .then( () => this.logout())\n  }\n\n  // Usercrypto\n\n  displayUserCryptos = () => {\n    if(!localStorage.token){return}\n    fetch(\"http://localhost:3000/api/v1/profile\", {\n      method: \"GET\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setState({\n        userCryptos: data.user.cryptos\n        // cryptosAreLoading: false\n      })\n    })\n  }\n\n  setCurrentCrypto = (crypto) => {\n    this.setState({\n      currentCrypto: crypto,\n      lookingAtSingleCrypto: true\n    })\n    this.props.history.push('/my-crypto/' + crypto.id)\n  }\n\n  countCrypto = (cc) => {\n    const cryptos = []\n    this.state.userCryptos.map((crypto) => {\n      if(cc.name === crypto.name) {\n        cryptos.push(crypto)\n      }\n    })\n    return cryptos.length\n  }\n\n  renderDetailedUserCryptoView = () => {\n    const {userCryptos, currentCrypto, lookingAtSingleCrypto} = this.state\n    if(lookingAtSingleCrypto === true) {\n      return(\n        <div>\n              <UserCryptoDetailedView\n              countCrypto={this.countCrypto}\n              currentCrypto={currentCrypto}\n              returnToUserCryptosContainer={this.returnToUserCryptosContainer}\n              deleteCrypto={this.deleteCrypto}\n              error={this.state.error}\n              />\n        </div>\n          )\n    }\n  }\n\n  returnToUserCryptosContainer = () => {\n    this.setState({\n      currentCrypto: null,\n      lookingAtSingleCrypto: false,\n    })\n  }\n\n  returnToHomepageFromCryptosContainers = () => {\n    this.setState({\n      currentCrypto: null,\n      lookingAtSingleCrypto: false\n    })\n    this.props.history.push('/centerConsole')\n  }\n\n\n  deleteCrypto = (crypto) => {\n    fetch(\"http://localhost:3000/api/v1/remove_crypto/\"+ crypto.id, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      },\n      body: JSON.stringify({crypto_id: crypto.id})\n    })\n    .then(res => res.json())\n    .then(data => {\n      let cryptoNames = data.user.cryptos.map((crypto) => {\n        return crypto.name\n      })\n      if(!cryptoNames.includes(crypto.name)){\n        setTimeout(() => this.setState({\n          currentCrypto: null,\n          lookingAtSingleCrypto: false,\n        }), 2000)\n      }\n      this.setError(`Deleted ${crypto.name} from Cryptos`)\n      this.displayUserCryptos()\n    })\n  }\n\n//  news\n\ngetNews = () => {\n  fetch(NEWS_API)\n    .then(res => res.json())\n    .then(data => {\n      this.setState({\n        news: data.articles\n      })\n    })\n}\n\nsetCurrentNewsArticle = (article) => {\n  this.setState({\n    currentNewsArticle: article,\n    lookingAtSingleNewsArticle: true\n  })\n}\n\nrenderDetailedNewsView = () => {\nconst {currentNewsArticle, lookingAtSingleNewsArticle} = this.state\nif(lookingAtSingleNewsArticle === true) {\n    return (\n          <ArticleView\n          currentNewsArticle={currentNewsArticle}\n          returnToNewsContainer={this.returnToNewsContainer}\n          />\n        )\n  }\n}\n\nreturnToNewsContainer = () => {\n  this.setState({\n    currentNewsArticle: null,\n    lookingAtSingleNewsArticle: false\n  })\n}\n\nreturnToHomepageFromNewsContainer = () => {\n  this.setState({\n    currentNewsArticle: null,\n    lookingAtSingleNewsArticle: false\n  })\n  this.props.history.push('/centerConsole')\n}\n\n// edit user\n\nrenderEditUser = () => {\nif(this.state.hasClickedSettings === true) {\n  return <EditUserContainer\n            current_user={this.state.current_user}\n            updateUser={this.updateUser}\n            deleteUser={this.deleteUser}\n            setEdit={this.setEdit}\n          />\n}\n}\n\nsetEdit = () => {\n  console.log(\"hello\")\n  this.setState({\n    hasClickedSettings: !this.state.hasClickedSettings\n  })\n  this.props.history.push('/centerConsole')\n\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n\n  render(){\n\n    return (\n      <div className=\"App\">\n        <Route path='/' render={() => <Dashboard\n                                      current_user={this.state.current_user}\n                                      logout={this.logout}\n                                      displayUserCryptos={this.displayUserCryptos}\n                                      getNews={this.getNews}\n                                      setEdit={this.setEdit}\n                                      />}/>\n\n          <Route exact path=\"/news\" render={() => <NewsContainer\n                                                  returnToHomepageFromNewsContainer={this.returnToHomepageFromNewsContainer}\n                                                  setCurrentNewsArticle={this.setCurrentNewsArticle}\n                                                  news={this.state.news}\n                                                  currentNewsArticle={this.state.currentNewsArticle}\n                                                  lookingAtSingleNewsArticle={this.state.lookingAtSingleNewsArticle}\n                                                  />}/>\n                                                {this.renderDetailedNewsView()}\n          <Route exact path=\"/login\" render={() => <Login attemptLogin={this.attemptLogin}/>}/>\n\n          <Route exact path=\"/user_signup\" render={() => <NewUserForm createNewUser={this.createNewUser}/>}/>\n\n          <Route path='/my-crypto' render={() => <UserCryptosContainer\n                                                  returnToHomepageFromCryptosContainers={this.returnToHomepageFromCryptosContainers}\n                                                  userCryptos={this.state.userCryptos}\n                                                  setCurrentCrypto={this.setCurrentCrypto}\n                                                  />}/>\n                                                  {this.renderDetailedUserCryptoView()}\n\n          <Route exact path=\"/centerConsole\" render={() =>  <centerConsole\n                                                         setFeedback={this.setFeedback}\n                                                         feedback={this.state.feedback}\n                                                         />}\n                                                         />\n                                                       <Route exact path=\"/update_profile\" render={() => this.renderEditUser()}/>\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}