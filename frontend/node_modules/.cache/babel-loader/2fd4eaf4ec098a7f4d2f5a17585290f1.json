{"ast":null,"code":"var _jsxFileName = \"/Users/chriscable/Desktop/projects/CryptoMundo/frontend/src/containers/cryptosContainer.js\";\nimport React from 'react';\nimport Crypto from '../components/crypto';\n\nclass CryptosContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cryptos: [],\n      lookingAtSingleCrypto: false,\n      cryptoContainerIsOpen: false,\n      currentCrypto: {},\n      feedback: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/api/v1/searchbyname\").then(res => res.json()).then(data => {\n      this.setState({\n        cryptos: data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"cryptoItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"ccHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"All Cryptocurrencies\"), React.createElement(\"button\", {\n      className: \"CCbutton\",\n      onClick: this.props.returnToHomepageFromCryptosContainers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Return to homepage\"), this.props.cryptos.map(crypto => {\n      return React.createElement(Crypto, {\n        className: \"cryptoElement\",\n        key: \"display-\" + crypto.name + \"-\" + crypto.id,\n        crypto: crypto,\n        setCurrentCrypto: this.props.setCurrentCrypto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default CryptosContainer;","map":{"version":3,"sources":["/Users/chriscable/Desktop/projects/CryptoMundo/frontend/src/containers/cryptosContainer.js"],"names":["React","Crypto","CryptosContainer","Component","constructor","props","state","cryptos","lookingAtSingleCrypto","cryptoContainerIsOpen","currentCrypto","feedback","componentDidMount","fetch","then","res","json","data","setState","render","returnToHomepageFromCryptosContainers","map","crypto","name","id","setCurrentCrypto"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,MAAMC,gBAAN,SAA+BF,KAAK,CAACG,SAArC,CAA+C;AAE7CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACE,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,qBAAqB,EAAE,KAFZ;AAGXC,MAAAA,qBAAqB,EAAE,KAHZ;AAIXC,MAAAA,aAAa,EAAE,EAJJ;AAKXC,MAAAA,QAAQ,EAAE;AALC,KAAb;AAOD;;AAGHC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZX,QAAAA,OAAO,EAAEU;AADG,OAAd;AAGD,KANH;AAOD;;AAEDE,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAA6B,MAAA,OAAO,EAAE,KAAKd,KAAL,CAAWe,qCAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,EAIE,KAAKf,KAAL,CAAWE,OAAX,CAAmBc,GAAnB,CAAwBC,MAAD,IAAU;AAC/B,aAAO,oBAAC,MAAD;AACC,QAAA,SAAS,EAAC,eADX;AAEC,QAAA,GAAG,EAAE,aAAWA,MAAM,CAACC,IAAlB,GAAuB,GAAvB,GAA2BD,MAAM,CAACE,EAFxC;AAGC,QAAA,MAAM,EAAEF,MAHT;AAIC,QAAA,gBAAgB,EAAE,KAAKjB,KAAL,CAAWoB,gBAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAOD,KARD,CAJF,CADF;AAiBD;;AA1C4C;;AA8C/C,eAAevB,gBAAf","sourcesContent":["import React from 'react'\nimport Crypto from '../components/crypto'\n\n\nclass CryptosContainer extends React.Component {\n\n  constructor(props){\n    super(props)\n      this.state = {\n        cryptos: [],\n        lookingAtSingleCrypto: false,\n        cryptoContainerIsOpen: false,\n        currentCrypto: {},\n        feedback: \"\"\n      }\n    }\n\n\n  componentDidMount(){\n    fetch(\"http://localhost:3000/api/v1/searchbyname\")\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          cryptos: data\n          })\n      })\n  }\n\n  render(){\n    return(\n      <div className=\"cryptoItem\">\n        <h1 className=\"ccHeader\">All Cryptocurrencies</h1>\n        <button className=\"CCbutton\" onClick={this.props.returnToHomepageFromCryptosContainers}>Return to homepage</button>\n        {\n        this.props.cryptos.map((crypto)=>{\n          return <Crypto\n                  className=\"cryptoElement\"\n                  key={\"display-\"+crypto.name+\"-\"+crypto.id}\n                  crypto={crypto}\n                  setCurrentCrypto={this.props.setCurrentCrypto}\n                  />\n\n        })\n      }\n    </div>\n    )\n  }\n\n}\n\nexport default CryptosContainer\n"]},"metadata":{},"sourceType":"module"}