{"ast":null,"code":"var _jsxFileName = \"/Users/chriscable/Desktop/module_5_project/cryptoproject_frontend1/src/App.js\";\nimport React from 'react';\nimport Login from './components/login';\nimport Banner from './components/Banner';\nimport NewUserForm from './components/NewUserForm';\nimport { Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport centerConsole from './containers/centerConsole';\nimport EditUserContainer from './containers/EditUserContainer';\nimport './App.css';\nimport UserCryptosContainer from './containers/UserCryptosContainer';\nimport UserCryptoDetailedView from './components/UserCryptoDetailedView';\nconst USER_URL = \"http://localhost:3000/api/v1/users\";\nconst LOGIN_URL = \"http://localhost:3000/api/v1/login\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.displayUserCryptos = () => {\n      if (!localStorage.token) {\n        return;\n      }\n\n      fetch(\"http://localhost:3000/api/v1/profile\", {\n        method: \"GET\",\n        headers: {\n          'Authorization': \"Bearer \" + localStorage.token\n        }\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          userCryptos: data.user.cryptos,\n          hasClickedMyCryptos: !this.state.hasClickedMyCryptos,\n          cryptosAreLoading: false\n        });\n      });\n    };\n\n    this.setCurrentCrypto = crypto => {\n      this.setState({\n        currentCrypto: crypto,\n        lookingAtSingleCrypto: true\n      });\n      this.props.history.push('/my-crypto/' + crypto.id);\n    };\n\n    this.renderUserCryptos = () => {\n      const userCryptos = this.state.userCryptos;\n\n      if (this.state.hasClickedMyCryptos === true) {\n        return React.createElement(UserCryptosContainer, {\n          returnToHomepageFromCryptosContainers: this.returnToHomepageFromCryptosContainers,\n          toggleCryptos: this.toggleMyCryptos,\n          userCryptos: userCryptos,\n          setCurrentCrypto: this.setCurrentCrypto,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.renderDetailedUserCryptoView = () => {\n      const currentCrypto = this.state.currentCrypto;\n\n      if (this.state.lookingAtSingleCrypto === true) {\n        return React.createElement(UserCryptoDetailedView, {\n          currentCrypto: currentCrypto,\n          returnToUserCryptosContainer: this.returnToUserCryptosContainer,\n          deleteCrypto: this.deleteCrypto,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.returnToUserCryptosContainer = () => {\n      this.setState({\n        currentCrypto: null,\n        lookingAtSingleCrypto: false,\n        hasClickedMyCryptos: true\n      });\n      this.props.history.push('/centerConsole');\n    };\n\n    this.returnMainMenu = () => {\n      this.setState({\n        hasClickedMyCryptos: false,\n        lookingAtSingleCrypto: false\n      });\n      this.props.history.push('/centerConsole');\n    };\n\n    this.returnToHomepageFromCryptosContainers = () => {\n      console.log(\"hello\");\n      this.setState({\n        cryptosAreLoading: true\n      });\n    };\n\n    this.deleteCrypto = crypto => {\n      const cryptoId = crypto.id;\n      fetch(\"http://localhost:3000/api/v1/remove_crypto/\" + cryptoId, {\n        method: \"DELETE\",\n        headers: {\n          'Authorization': \"Bearer \" + localStorage.token\n        },\n        body: JSON.stringify({\n          crypto_id: cryptoId\n        })\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          currentCrypto: null,\n          lookingAtSingleCrypto: false\n        });\n        this.setError(\"Deleted \".concat(crypto.name, \" from Cryptos\"));\n        this.displayUserCryptos();\n      });\n    };\n\n    this.state = {\n      current_user: {},\n      error: \"\",\n      feedback: \"\",\n      userCryptos: [],\n      hasClickedMyCryptos: false,\n      currentCrypto: {},\n      lookingAtSingleCrypto: false,\n      cryptosAreLoading: false\n    };\n    this.createNewUser = this.createNewUser.bind(this);\n    this.attemptLogin = this.attemptLogin.bind(this);\n    this.setActiveUser = this.setActiveUser.bind(this);\n    this.logout = this.logout.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n    this.toggleMyCryptos = this.toggleMyCryptos.bind(this);\n    this.setError = this.setError.bind(this);\n    this.setFeedback = this.setFeedback.bind(this);\n    this.renewState();\n  }\n\n  setFeedback(str) {\n    this.setState({\n      feedback: str\n    });\n    setTimeout(() => this.setState({\n      feedback: \"\"\n    }), 1500);\n  }\n\n  setError(str) {\n    this.setState({\n      error: str\n    });\n    setTimeout(() => this.setState({\n      error: \"\"\n    }), 1500);\n  }\n\n  createNewUser(user) {\n    fetch(USER_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n      this.props.history.push('/centerConsole');\n    });\n  }\n\n  attemptLogin(user) {\n    fetch(LOGIN_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n\n      if (!data.message) {\n        this.props.history.push('/centerConsole');\n      }\n    });\n  }\n\n  setActiveUser(data, mode = \"hard\") {\n    if (data.message && mode === \"soft\") {\n      return;\n    } else if (data.message) {\n      this.setState({\n        error: data.message\n      });\n    } else {\n      this.setState({\n        current_user: data.user,\n        error: \"\"\n      });\n\n      if (data.jwt) {\n        localStorage.token = data.jwt;\n      }\n    }\n  }\n\n  logout() {\n    this.setState({\n      current_user: {},\n      hasClickedMyCryptos: false,\n      currentCrypto: {},\n      lookingAtSingleCrypto: false\n    });\n    delete localStorage.token;\n    this.props.history.push('/login');\n  }\n\n  renewState() {\n    if (!localStorage.token) {\n      return;\n    }\n\n    fetch(\"http://localhost:3000/api/v1/profile\", {\n      method: \"GET\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    }).then(res => res.json()).then(data => this.setActiveUser(data, \"soft\"));\n  }\n\n  toggleMyCryptos() {\n    this.setState({\n      hasClickedMyCryptos: !this.state.hasClickedMyCryptos\n    });\n  }\n\n  updateUser(user) {\n    fetch(USER_URL + \"/\".concat(user.id), {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.token,\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n      this.props.history.push('/centerConsole');\n    });\n  }\n\n  deleteUser(id) {\n    fetch(USER_URL + \"/\".concat(id), {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    }).then(() => this.logout());\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      render: () => React.createElement(Banner, {\n        current_user: this.state.current_user,\n        error: this.state.error,\n        logout: this.logout,\n        displayUserCryptos: this.displayUserCryptos,\n        returnMainMenu: this.returnMainMenu,\n        hasClickedMyCryptos: this.state.hasClickedMyCryptos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => React.createElement(Login, {\n        attemptLogin: this.attemptLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/user_signup\",\n      render: () => React.createElement(NewUserForm, {\n        createNewUser: this.createNewUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/my-crypto\",\n      render: () => this.renderDetailedUserCryptoView(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), this.renderUserCryptos(), React.createElement(Route, {\n      exact: true,\n      path: \"/centerConsole\",\n      render: () => React.createElement(centerConsole, {\n        setFeedback: this.setFeedback,\n        feedback: this.state.feedback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/update_profile\",\n      render: () => React.createElement(EditUserContainer, {\n        current_user: this.state.current_user,\n        updateUser: this.updateUser,\n        deleteUser: this.deleteUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/chriscable/Desktop/module_5_project/cryptoproject_frontend1/src/App.js"],"names":["React","Login","Banner","NewUserForm","Route","withRouter","centerConsole","EditUserContainer","UserCryptosContainer","UserCryptoDetailedView","USER_URL","LOGIN_URL","App","Component","constructor","props","displayUserCryptos","localStorage","token","fetch","method","headers","then","res","json","data","setState","userCryptos","user","cryptos","hasClickedMyCryptos","state","cryptosAreLoading","setCurrentCrypto","crypto","currentCrypto","lookingAtSingleCrypto","history","push","id","renderUserCryptos","returnToHomepageFromCryptosContainers","toggleMyCryptos","renderDetailedUserCryptoView","returnToUserCryptosContainer","deleteCrypto","returnMainMenu","console","log","cryptoId","body","JSON","stringify","crypto_id","setError","name","current_user","error","feedback","createNewUser","bind","attemptLogin","setActiveUser","logout","updateUser","deleteUser","setFeedback","renewState","str","setTimeout","message","mode","jwt","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Login from './components/login';\nimport Banner from './components/Banner'\nimport NewUserForm from './components/NewUserForm'\nimport { Route } from 'react-router-dom';\nimport {withRouter} from 'react-router';\nimport centerConsole from './containers/centerConsole'\nimport EditUserContainer from './containers/EditUserContainer'\nimport './App.css';\nimport UserCryptosContainer from './containers/UserCryptosContainer'\nimport UserCryptoDetailedView from './components/UserCryptoDetailedView'\n\nconst USER_URL = \"http://localhost:3000/api/v1/users\"\nconst LOGIN_URL = \"http://localhost:3000/api/v1/login\"\n\nclass App extends React.Component{\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      current_user: {},\n      error: \"\",\n      feedback: \"\",\n      userCryptos: [],\n      hasClickedMyCryptos: false,\n      currentCrypto: {},\n      lookingAtSingleCrypto: false,\n      cryptosAreLoading: false\n    }\n\n    this.createNewUser = this.createNewUser.bind(this)\n    this.attemptLogin = this.attemptLogin.bind(this)\n    this.setActiveUser = this.setActiveUser.bind(this)\n    this.logout = this.logout.bind(this)\n    this.updateUser = this.updateUser.bind(this)\n    this.deleteUser = this.deleteUser.bind(this)\n    this.toggleMyCryptos = this.toggleMyCryptos.bind(this)\n    this.setError = this.setError.bind(this)\n    this.setFeedback = this.setFeedback.bind(this)\n\n\n    this.renewState();\n  }\n\n  setFeedback(str){\n    this.setState({\n      feedback: str\n    })\n    setTimeout(() => this.setState({feedback: \"\"}), 1500)\n  }\n\n  setError(str){\n    this.setState({\n      error: str\n    })\n    setTimeout(() => this.setState({error: \"\"}), 1500)\n  }\n\n  createNewUser(user){\n    fetch(USER_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({user})\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      this.props.history.push('/centerConsole')\n    })\n  }\n\n  attemptLogin(user){\n    fetch(LOGIN_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({user})\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      if(!data.message){\n        this.props.history.push('/centerConsole')\n      }\n    })\n  }\n\n  setActiveUser(data, mode=\"hard\"){\n    if(data.message && mode === \"soft\"){\n      return\n    } else if(data.message){\n      this.setState({error: data.message})\n    } else {\n      this.setState({\n        current_user: data.user,\n        error: \"\"\n      })\n      if(data.jwt){localStorage.token = data.jwt}\n    }\n  }\n\n  logout(){\n    this.setState({\n      current_user: {},\n      hasClickedMyCryptos: false,\n      currentCrypto: {},\n      lookingAtSingleCrypto: false\n    })\n    delete localStorage.token\n    this.props.history.push('/login')\n  }\n\n  renewState(){\n  if(!localStorage.token){return}\n  fetch(\"http://localhost:3000/api/v1/profile\", {\n    method: \"GET\",\n    headers: {\n      'Authorization': \"Bearer \" + localStorage.token\n    }\n  })\n  .then(res => res.json())\n  .then(data => this.setActiveUser(data, \"soft\"))\n}\n\n  displayUserCryptos = () => {\n    if(!localStorage.token){return}\n    fetch(\"http://localhost:3000/api/v1/profile\", {\n      method: \"GET\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setState({\n        userCryptos: data.user.cryptos,\n        hasClickedMyCryptos: !this.state.hasClickedMyCryptos,\n        cryptosAreLoading: false\n      })\n    })\n  }\n\n  toggleMyCryptos() {\n    this.setState({\n      hasClickedMyCryptos: !this.state.hasClickedMyCryptos\n    })\n  }\n\n  updateUser(user){\n    fetch(USER_URL + `/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.token,\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      this.props.history.push('/centerConsole')\n    })\n  }\n\n  deleteUser(id){\n    fetch(USER_URL + `/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    })\n    .then( () => this.logout())\n  }\n\n  setCurrentCrypto = (crypto) => {\n    this.setState({\n      currentCrypto: crypto,\n      lookingAtSingleCrypto: true\n    })\n    this.props.history.push('/my-crypto/' + crypto.id)\n\n  }\n\n  renderUserCryptos = () => {\n    const {userCryptos} = this.state\n    if(this.state.hasClickedMyCryptos === true) {\n      return <UserCryptosContainer\n              returnToHomepageFromCryptosContainers={this.returnToHomepageFromCryptosContainers}\n              toggleCryptos={this.toggleMyCryptos}\n              userCryptos={userCryptos}\n              setCurrentCrypto={this.setCurrentCrypto}\n              />\n    }\n  }\n\n  renderDetailedUserCryptoView = () => {\n    const {currentCrypto} = this.state\n    if(this.state.lookingAtSingleCrypto === true) {\n      return <UserCryptoDetailedView\n              currentCrypto={currentCrypto}\n              returnToUserCryptosContainer={this.returnToUserCryptosContainer}\n              deleteCrypto={this.deleteCrypto}\n              />\n    }\n\n  }\n\n  returnToUserCryptosContainer = () => {\n    this.setState({\n      currentCrypto: null,\n      lookingAtSingleCrypto: false,\n      hasClickedMyCryptos: true\n    })\n    this.props.history.push('/centerConsole')\n  }\n\n  returnMainMenu = () => {\n    this.setState({\n      hasClickedMyCryptos: false,\n      lookingAtSingleCrypto: false\n    })\n    this.props.history.push('/centerConsole')\n  }\n\n  returnToHomepageFromCryptosContainers = () => {\n    console.log(\"hello\")\n    this.setState({\n      cryptosAreLoading: true\n    })\n  }\n\n  deleteCrypto = (crypto) => {\n    const cryptoId = crypto.id\n    fetch(\"http://localhost:3000/api/v1/remove_crypto/\"+ cryptoId, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      },\n      body: JSON.stringify({crypto_id: cryptoId})\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setState({\n        currentCrypto: null,\n        lookingAtSingleCrypto: false,\n      })\n      this.setError(`Deleted ${crypto.name} from Cryptos`)\n      this.displayUserCryptos()\n    })\n\n  }\n\n\n\n  render(){\n\n    return (\n      <div className=\"App\">\n        <Route path='/' render={() => <Banner current_user={this.state.current_user}\n                                              error={this.state.error}\n\n                                              logout={this.logout}\n                                              displayUserCryptos={this.displayUserCryptos}\n                                              returnMainMenu={this.returnMainMenu}\n                                              hasClickedMyCryptos={this.state.hasClickedMyCryptos}\n\n                                              />}/>\n        <main className=\"main\">\n          <Route exact path=\"/login\" render={() => <Login attemptLogin={this.attemptLogin}/>}/>\n          <Route exact path=\"/user_signup\" render={() => <NewUserForm createNewUser={this.createNewUser}/>}/>\n          <Route path='/my-crypto' render={() => this.renderDetailedUserCryptoView()} />\n          {this.renderUserCryptos()}\n          <Route exact path=\"/centerConsole\" render={() =>  <centerConsole\n                                                         setFeedback={this.setFeedback}\n                                                         feedback={this.state.feedback}\n                                                         />}\n                                                         />\n          <Route exact path=\"/update_profile\" render={() => <EditUserContainer current_user={this.state.current_user}\n                                                                               updateUser={this.updateUser}\n                                                                               deleteUser={this.deleteUser}/>} />\n        </main>\n\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}