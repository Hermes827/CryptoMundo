{"ast":null,"code":"var _jsxFileName = \"/Users/chriscable/Desktop/projects/CryptoMundo/frontend/src/App.js\";\nimport React from 'react';\nimport Login from './components/login';\nimport Banner from './components/Banner';\nimport NewUserForm from './components/NewUserForm';\nimport { Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport centerConsole from './containers/centerConsole';\nimport EditUserContainer from './containers/EditUserContainer';\nimport './App.css';\nimport UserCryptosContainer from './containers/UserCryptosContainer';\nimport UserCryptoDetailedView from './components/UserCryptoDetailedView';\nimport NewsContainer from './containers/newsContainer';\nimport ArticleView from './components/articleView';\nimport { NEWS_API } from './constants';\nimport { USER_URL } from './constants';\nimport { LOGIN_URL } from './constants';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.displayUserCryptos = () => {\n      if (!localStorage.token) {\n        return;\n      }\n\n      fetch(\"http://localhost:3000/api/v1/profile\", {\n        method: \"GET\",\n        headers: {\n          'Authorization': \"Bearer \" + localStorage.token\n        }\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          userCryptos: data.user.cryptos // cryptosAreLoading: false\n\n        });\n      });\n    };\n\n    this.setCurrentCrypto = crypto => {\n      this.setState({\n        currentCrypto: crypto,\n        lookingAtSingleCrypto: true\n      });\n      this.props.history.push('/my-crypto/' + crypto.id);\n    };\n\n    this.renderDetailedUserCryptoView = () => {\n      const _this$state = this.state,\n            currentCrypto = _this$state.currentCrypto,\n            lookingAtSingleCrypto = _this$state.lookingAtSingleCrypto;\n\n      if (lookingAtSingleCrypto === true) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(UserCryptoDetailedView, {\n          countCrypto: this.countCrypto,\n          currentCrypto: currentCrypto,\n          returnToUserCryptosContainer: this.returnToUserCryptosContainer,\n          deleteCrypto: this.deleteCrypto,\n          error: this.state.error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.returnToUserCryptosContainer = () => {\n      this.setState({\n        currentCrypto: null,\n        lookingAtSingleCrypto: false\n      });\n    };\n\n    this.returnToHomepageFromCryptosContainers = () => {\n      this.setState({\n        currentCrypto: null,\n        lookingAtSingleCrypto: false\n      });\n      this.props.history.push('/centerConsole');\n    };\n\n    this.deleteCrypto = crypto => {\n      fetch(\"http://localhost:3000/api/v1/remove_crypto/\" + crypto.id, {\n        method: \"DELETE\",\n        headers: {\n          'Authorization': \"Bearer \" + localStorage.token\n        },\n        body: JSON.stringify({\n          crypto_id: crypto.id\n        })\n      }).then(res => res.json()).then(data => {\n        let cryptoNames = data.user.cryptos.map(crypto => {\n          return crypto.name;\n        });\n\n        if (!cryptoNames.includes(crypto.name)) {\n          setTimeout(() => this.setState({\n            currentCrypto: null,\n            lookingAtSingleCrypto: false\n          }), 2000);\n        }\n\n        this.setError(\"Deleted ${crypto.name} from Cryptos\");\n        this.displayUserCryptos();\n      });\n    };\n\n    this.state = {\n      current_user: {},\n      error: \"\",\n      feedback: \"\",\n      userCryptos: [],\n      currentCrypto: {},\n      lookingAtSingleCrypto: false,\n      cryptosAreLoading: false,\n      news: [],\n      currentNewsArticle: {},\n      lookingAtSingleNewsArticle: false\n    };\n    this.createNewUser = this.createNewUser.bind(this);\n    this.attemptLogin = this.attemptLogin.bind(this);\n    this.setActiveUser = this.setActiveUser.bind(this);\n    this.logout = this.logout.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n    this.setError = this.setError.bind(this);\n    this.setFeedback = this.setFeedback.bind(this);\n    this.renewState();\n  }\n\n  setFeedback(str) {\n    this.setState({\n      feedback: str\n    });\n    setTimeout(() => this.setState({\n      feedback: \"\"\n    }), 1500);\n  }\n\n  setError(str) {\n    this.setState({\n      error: str\n    });\n    setTimeout(() => this.setState({\n      error: \"\"\n    }), 1500);\n  } // user stuff\n\n\n  renewState() {\n    if (!localStorage.token) {\n      return;\n    }\n\n    fetch(\"http://localhost:3000/api/v1/profile\", {\n      method: \"GET\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    }).then(res => res.json()).then(data => this.setActiveUser(data, \"soft\"));\n  }\n\n  setActiveUser(data, mode = \"hard\") {\n    if (data.message && mode === \"soft\") {\n      return;\n    } else if (data.message) {\n      this.setState({\n        error: data.message\n      });\n    } else {\n      this.setState({\n        current_user: data.user,\n        error: \"\"\n      });\n\n      if (data.jwt) {\n        localStorage.token = data.jwt;\n      }\n    }\n  }\n\n  createNewUser(user) {\n    fetch(USER_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n      this.props.history.push('/centerConsole');\n    });\n  }\n\n  updateUser(user) {\n    fetch(USER_URL + \"/\".concat(user.id), {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.token,\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n      this.props.history.push('/centerConsole');\n    });\n  }\n\n  deleteUser(user) {\n    fetch(USER_URL + \"/\".concat(user.id), {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    }).then(() => this.logout());\n  } // login\n\n\n  attemptLogin(user) {\n    fetch(LOGIN_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n\n      if (!data.message) {\n        this.props.history.push('/centerConsole');\n      }\n    });\n  }\n\n  logout() {\n    this.setState({\n      current_user: {},\n      currentCrypto: {}\n    });\n    delete localStorage.token;\n    this.props.history.push('/login');\n  } // Usercrypto\n\n\n  //  news\n  // getNews = () => {\n  //   fetch(NEWS_API)\n  //     .then(res => res.json())\n  //     .then(data => {\n  //       this.setState({\n  //         news: data.articles\n  //       })\n  //     })\n  // }\n  //\n  //\n  // setCurrentNewsArticle = (article) => {\n  //   this.setState({\n  //     currentNewsArticle: article,\n  //     lookingAtSingleNewsArticle: true\n  //   })\n  // }\n  //\n  // renderDetailedNewsView = () => {\n  // const {currentNewsArticle, lookingAtSingleNewsArticle} = this.state\n  // if(lookingAtSingleNewsArticle === true) {\n  //     return (\n  //           <ArticleView\n  //           currentNewsArticle={currentNewsArticle}\n  //           returnToNewsContainer={this.returnToNewsContainer}\n  //           />\n  //         )\n  //   }\n  // }\n  //\n  // returnToNewsContainer = () => {\n  //   this.setState({\n  //     currentNewsArticle: null,\n  //     lookingAtSingleNewsArticle: false\n  //   })\n  // }\n  //\n  // returnToHomepageFromNewsContainer = () => {\n  //   this.setState({\n  //     currentNewsArticle: null,\n  //     lookingAtSingleNewsArticle: false\n  //   })\n  //   this.props.history.push('/centerConsole')\n  // }\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      render: () => React.createElement(Banner, {\n        current_user: this.state.current_user,\n        logout: this.logout,\n        displayUserCryptos: this.displayUserCryptos,\n        getNews: this.getNews,\n        setEdit: this.setEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/news\",\n      render: () => React.createElement(NewsContainer, {\n        returnToHomepageFromNewsContainer: this.returnToHomepageFromNewsContainer,\n        setCurrentNewsArticle: this.setCurrentNewsArticle,\n        news: this.state.news,\n        currentNewsArticle: this.state.currentNewsArticle,\n        lookingAtSingleNewsArticle: this.state.lookingAtSingleNewsArticle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => React.createElement(Login, {\n        attemptLogin: this.attemptLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/user_signup\",\n      render: () => React.createElement(NewUserForm, {\n        createNewUser: this.createNewUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/my-crypto\",\n      render: () => React.createElement(UserCryptosContainer, {\n        returnToHomepageFromCryptosContainers: this.returnToHomepageFromCryptosContainers,\n        userCryptos: this.state.userCryptos,\n        setCurrentCrypto: this.setCurrentCrypto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), this.renderDetailedUserCryptoView(), React.createElement(Route, {\n      exact: true,\n      path: \"/centerConsole\",\n      render: () => React.createElement(centerConsole, {\n        setFeedback: this.setFeedback,\n        feedback: this.state.feedback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/update_profile\",\n      render: () => React.createElement(EditUserContainer, {\n        current_user: this.state.current_user,\n        updateUser: this.updateUser,\n        deleteUser: this.deleteUser,\n        setEdit: this.setEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/chriscable/Desktop/projects/CryptoMundo/frontend/src/App.js"],"names":["React","Login","Banner","NewUserForm","Route","withRouter","centerConsole","EditUserContainer","UserCryptosContainer","UserCryptoDetailedView","NewsContainer","ArticleView","NEWS_API","USER_URL","LOGIN_URL","App","Component","constructor","props","displayUserCryptos","localStorage","token","fetch","method","headers","then","res","json","data","setState","userCryptos","user","cryptos","setCurrentCrypto","crypto","currentCrypto","lookingAtSingleCrypto","history","push","id","renderDetailedUserCryptoView","state","countCrypto","returnToUserCryptosContainer","deleteCrypto","error","returnToHomepageFromCryptosContainers","body","JSON","stringify","crypto_id","cryptoNames","map","name","includes","setTimeout","setError","current_user","feedback","cryptosAreLoading","news","currentNewsArticle","lookingAtSingleNewsArticle","createNewUser","bind","attemptLogin","setActiveUser","logout","updateUser","deleteUser","setFeedback","renewState","str","mode","message","jwt","render","getNews","setEdit","returnToHomepageFromNewsContainer","setCurrentNewsArticle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Login from './components/login';\nimport Banner from './components/Banner'\nimport NewUserForm from './components/NewUserForm'\nimport { Route } from 'react-router-dom';\nimport {withRouter} from 'react-router';\nimport centerConsole from './containers/centerConsole'\nimport EditUserContainer from './containers/EditUserContainer'\nimport './App.css';\nimport UserCryptosContainer from './containers/UserCryptosContainer'\nimport UserCryptoDetailedView from './components/UserCryptoDetailedView'\nimport NewsContainer from './containers/newsContainer'\nimport ArticleView from './components/articleView'\nimport {NEWS_API} from './constants'\nimport {USER_URL} from './constants'\nimport {LOGIN_URL} from './constants'\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      current_user: {},\n      error: \"\",\n      feedback: \"\",\n      userCryptos: [],\n      currentCrypto: {},\n      lookingAtSingleCrypto: false,\n      cryptosAreLoading: false,\n      news: [],\n      currentNewsArticle: {},\n      lookingAtSingleNewsArticle: false\n    }\n\n    this.createNewUser = this.createNewUser.bind(this)\n    this.attemptLogin = this.attemptLogin.bind(this)\n    this.setActiveUser = this.setActiveUser.bind(this)\n    this.logout = this.logout.bind(this)\n    this.updateUser = this.updateUser.bind(this)\n    this.deleteUser = this.deleteUser.bind(this)\n    this.setError = this.setError.bind(this)\n    this.setFeedback = this.setFeedback.bind(this)\n    this.renewState();\n  }\n\n  setFeedback(str){\n    this.setState({\n      feedback: str\n    })\n    setTimeout(() => this.setState({feedback: \"\"}), 1500)\n  }\n\n  setError(str){\n    this.setState({\n      error: str\n    })\n    setTimeout(() => this.setState({error: \"\"}), 1500)\n  }\n\n  // user stuff\n\n  renewState(){\n  if(!localStorage.token){return}\n  fetch(\"http://localhost:3000/api/v1/profile\", {\n    method: \"GET\",\n    headers: {\n      'Authorization': \"Bearer \" + localStorage.token\n    }\n  })\n  .then(res => res.json())\n  .then(data => this.setActiveUser(data, \"soft\"))\n}\n\n  setActiveUser(data, mode=\"hard\"){\n    if(data.message && mode === \"soft\"){\n      return\n    } else if(data.message){\n      this.setState({error: data.message})\n    } else {\n      this.setState({\n        current_user: data.user,\n        error: \"\"\n      })\n      if(data.jwt){localStorage.token = data.jwt}\n    }\n  }\n\n  createNewUser(user){\n    fetch(USER_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({user})\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      this.props.history.push('/centerConsole')\n    })\n  }\n\n  updateUser(user){\n    fetch(USER_URL + `/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.token,\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({user})\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      this.props.history.push('/centerConsole')\n    })\n  }\n\n  deleteUser(user){\n    fetch(USER_URL + `/${user.id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    })\n    .then( () => this.logout())\n  }\n\n  // login\n\n  attemptLogin(user){\n    fetch(LOGIN_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({user})\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      if(!data.message){\n        this.props.history.push('/centerConsole')\n      }\n    })\n  }\n\n  logout(){\n    this.setState({\n      current_user: {},\n      currentCrypto: {}\n    })\n    delete localStorage.token\n    this.props.history.push('/login')\n  }\n\n  // Usercrypto\n\n  displayUserCryptos = () => {\n    if(!localStorage.token){return}\n    fetch(\"http://localhost:3000/api/v1/profile\", {\n      method: \"GET\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setState({\n        userCryptos: data.user.cryptos\n        // cryptosAreLoading: false\n      })\n    })\n  }\n\n  setCurrentCrypto = (crypto) => {\n    this.setState({\n      currentCrypto: crypto,\n      lookingAtSingleCrypto: true\n    })\n    this.props.history.push('/my-crypto/' + crypto.id)\n  }\n\n  renderDetailedUserCryptoView = () => {\n    const {currentCrypto, lookingAtSingleCrypto} = this.state\n    if(lookingAtSingleCrypto === true) {\n      return(\n        <div>\n        <UserCryptoDetailedView\n        countCrypto={this.countCrypto}\n        currentCrypto={currentCrypto}\n        returnToUserCryptosContainer={this.returnToUserCryptosContainer}\n        deleteCrypto={this.deleteCrypto}\n        error={this.state.error}\n        />\n        </div>\n          )\n    }\n  }\n\n  returnToUserCryptosContainer = () => {\n    this.setState({\n      currentCrypto: null,\n      lookingAtSingleCrypto: false,\n    })\n  }\n\n  returnToHomepageFromCryptosContainers = () => {\n    this.setState({\n      currentCrypto: null,\n      lookingAtSingleCrypto: false\n    })\n    this.props.history.push('/centerConsole')\n  }\n\n\n  deleteCrypto = (crypto) => {\n    fetch(\"http://localhost:3000/api/v1/remove_crypto/\"+ crypto.id, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      },\n      body: JSON.stringify({crypto_id: crypto.id})\n    })\n    .then(res => res.json())\n    .then(data => {\n      let cryptoNames = data.user.cryptos.map((crypto) => {\n        return crypto.name\n      })\n      if(!cryptoNames.includes(crypto.name)){\n        setTimeout(() => this.setState({\n          currentCrypto: null,\n          lookingAtSingleCrypto: false,\n        }), 2000)\n      }\n      this.setError(\"Deleted ${crypto.name} from Cryptos\")\n      this.displayUserCryptos()\n    })\n  }\n\n//  news\n\n// getNews = () => {\n//   fetch(NEWS_API)\n//     .then(res => res.json())\n//     .then(data => {\n//       this.setState({\n//         news: data.articles\n//       })\n//     })\n// }\n//\n//\n// setCurrentNewsArticle = (article) => {\n//   this.setState({\n//     currentNewsArticle: article,\n//     lookingAtSingleNewsArticle: true\n//   })\n// }\n//\n// renderDetailedNewsView = () => {\n// const {currentNewsArticle, lookingAtSingleNewsArticle} = this.state\n// if(lookingAtSingleNewsArticle === true) {\n//     return (\n//           <ArticleView\n//           currentNewsArticle={currentNewsArticle}\n//           returnToNewsContainer={this.returnToNewsContainer}\n//           />\n//         )\n//   }\n// }\n//\n// returnToNewsContainer = () => {\n//   this.setState({\n//     currentNewsArticle: null,\n//     lookingAtSingleNewsArticle: false\n//   })\n// }\n//\n// returnToHomepageFromNewsContainer = () => {\n//   this.setState({\n//     currentNewsArticle: null,\n//     lookingAtSingleNewsArticle: false\n//   })\n//   this.props.history.push('/centerConsole')\n// }\n\n/////////////////////////////////////////////////////////////////////////////////\n\n  render(){\n\n    return (\n      <div className=\"App\">\n        <Route path='/' render={() => <Banner\n                                      current_user={this.state.current_user}\n                                      logout={this.logout}\n                                      displayUserCryptos={this.displayUserCryptos}\n                                      getNews={this.getNews}\n                                      setEdit={this.setEdit}\n                                      />}/>\n\n          <Route exact path=\"/news\" render={() => <NewsContainer\n                                                  returnToHomepageFromNewsContainer={this.returnToHomepageFromNewsContainer}\n                                                  setCurrentNewsArticle={this.setCurrentNewsArticle}\n                                                  news={this.state.news}\n                                                  currentNewsArticle={this.state.currentNewsArticle}\n                                                  lookingAtSingleNewsArticle={this.state.lookingAtSingleNewsArticle}\n                                                  />}/>\n                                                \n\n          <Route exact path=\"/login\" render={() => <Login attemptLogin={this.attemptLogin}/>}/>\n\n          <Route exact path=\"/user_signup\" render={() => <NewUserForm createNewUser={this.createNewUser}/>}/>\n\n          <Route path='/my-crypto' render={() => <UserCryptosContainer\n                                                  returnToHomepageFromCryptosContainers={this.returnToHomepageFromCryptosContainers}\n                                                  userCryptos={this.state.userCryptos}\n                                                  setCurrentCrypto={this.setCurrentCrypto}\n                                                  />}/>\n                                                  {this.renderDetailedUserCryptoView()}\n\n          <Route exact path=\"/centerConsole\" render={() =>  <centerConsole\n                                                         setFeedback={this.setFeedback}\n                                                         feedback={this.state.feedback}\n                                                         />}/>\n\n          <Route exact path=\"/update_profile\" render={() => <EditUserContainer\n                                                            current_user={this.state.current_user}\n                                                            updateUser={this.updateUser}\n                                                            deleteUser={this.deleteUser}\n                                                            setEdit={this.setEdit}\n                                                            />}/>\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}