{"ast":null,"code":"var _jsxFileName = \"/Users/chriscable/Desktop/projects/CryptoMundo/frontend/src/containers/cryptosContainer.js\";\nimport React from 'react';\nimport Crypto from '../components/crypto';\nimport CryptoDetailedView from '../components/CryptoDetailedView';\n\nclass CryptosContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setCurrentCrypto = crypto => {\n      this.setState({\n        currentCrypto: crypto,\n        lookingAtSingleCrypto: true\n      });\n    };\n\n    this.state = {\n      cryptos: [],\n      lookingAtSingleCrypto: false,\n      cryptoContainerIsOpen: false,\n      currentCrypto: {},\n      feedback: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/api/v1/searchbyname\").then(res => res.json()).then(data => {\n      this.setState({\n        cryptos: data\n      });\n      console.log(data);\n    });\n  }\n\n  renderDetailedUserCryptoView() {\n    const _this$state = this.state,\n          currentCrypto = _this$state.currentCrypto,\n          lookingAtSingleCrypto = _this$state.lookingAtSingleCrypto;\n\n    if (lookingAtSingleCrypto === true) {\n      return React.createElement(CryptoDetailedView, {\n        feedback: this.state.feedback,\n        currentCrypto: currentCrypto,\n        returnToCryptosContainer: this.returnToCryptosContainer,\n        addCrypto: this.addCrypto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"cryptoItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"ccHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"All Cryptocurrencies\"), React.createElement(\"button\", {\n      className: \"CCbutton\",\n      onClick: this.props.returnToHomepageFromCryptosContainers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Return to homepage\"), this.renderDetailedUserCryptoView(), this.state.cryptos.map(crypto => {\n      return React.createElement(Crypto, {\n        className: \"cryptoElement\",\n        key: \"display-\" + crypto.name + \"-\" + crypto.id,\n        crypto: crypto,\n        setCurrentCrypto: this.setCurrentCrypto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default CryptosContainer;","map":{"version":3,"sources":["/Users/chriscable/Desktop/projects/CryptoMundo/frontend/src/containers/cryptosContainer.js"],"names":["React","Crypto","CryptoDetailedView","CryptosContainer","Component","constructor","props","setCurrentCrypto","crypto","setState","currentCrypto","lookingAtSingleCrypto","state","cryptos","cryptoContainerIsOpen","feedback","componentDidMount","fetch","then","res","json","data","console","log","renderDetailedUserCryptoView","returnToCryptosContainer","addCrypto","render","returnToHomepageFromCryptosContainers","map","name","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;;AAIA,MAAMC,gBAAN,SAA+BH,KAAK,CAACI,SAArC,CAA+C;AAE7CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAuBlBC,gBAvBkB,GAuBEC,MAAD,IAAY;AAC7B,WAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEF,MADH;AAEZG,QAAAA,qBAAqB,EAAE;AAFX,OAAd;AAID,KA5BiB;;AAEd,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXF,MAAAA,qBAAqB,EAAE,KAFZ;AAGXG,MAAAA,qBAAqB,EAAE,KAHZ;AAIXJ,MAAAA,aAAa,EAAE,EAJJ;AAKXK,MAAAA,QAAQ,EAAE;AALC,KAAb;AAOD;;AAGHC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,WAAKZ,QAAL,CAAc;AACZI,QAAAA,OAAO,EAAEQ;AADG,OAAd;AAGEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KAPH;AAQD;;AASDG,EAAAA,4BAA4B,GAAE;AAAA,wBACmB,KAAKZ,KADxB;AAAA,UACrBF,aADqB,eACrBA,aADqB;AAAA,UACNC,qBADM,eACNA,qBADM;;AAE5B,QAAGA,qBAAqB,KAAK,IAA7B,EAAmC;AACjC,aAAO,oBAAC,kBAAD;AACC,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWG,QADtB;AAEC,QAAA,aAAa,EAAEL,aAFhB;AAGC,QAAA,wBAAwB,EAAE,KAAKe,wBAHhC;AAIC,QAAA,SAAS,EAAE,KAAKC,SAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAMD;AACF;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAA6B,MAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWsB,qCAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,EAGO,KAAKJ,4BAAL,EAHP,EAKE,KAAKZ,KAAL,CAAWC,OAAX,CAAmBgB,GAAnB,CAAwBrB,MAAD,IAAU;AAC/B,aAAO,oBAAC,MAAD;AACC,QAAA,SAAS,EAAC,eADX;AAEC,QAAA,GAAG,EAAE,aAAWA,MAAM,CAACsB,IAAlB,GAAuB,GAAvB,GAA2BtB,MAAM,CAACuB,EAFxC;AAGC,QAAA,MAAM,EAAEvB,MAHT;AAIC,QAAA,gBAAgB,EAAE,KAAKD,gBAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAOD,KARD,CALF,CADF;AAkBD;;AA/D4C;;AAmE/C,eAAeJ,gBAAf","sourcesContent":["import React from 'react'\nimport Crypto from '../components/crypto'\nimport CryptoDetailedView from '../components/CryptoDetailedView'\n\n\n\nclass CryptosContainer extends React.Component {\n\n  constructor(props){\n    super(props)\n      this.state = {\n        cryptos: [],\n        lookingAtSingleCrypto: false,\n        cryptoContainerIsOpen: false,\n        currentCrypto: {},\n        feedback: \"\"\n      }\n    }\n\n\n  componentDidMount(){\n    fetch(\"http://localhost:3000/api/v1/searchbyname\")\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          cryptos: data\n          })\n          console.log(data)\n      })\n  }\n\n  setCurrentCrypto = (crypto) => {\n    this.setState({\n      currentCrypto: crypto,\n      lookingAtSingleCrypto: true\n    })\n  }\n\n  renderDetailedUserCryptoView(){\n    const {currentCrypto, lookingAtSingleCrypto} = this.state\n    if(lookingAtSingleCrypto === true) {\n      return <CryptoDetailedView\n              feedback={this.state.feedback}\n              currentCrypto={currentCrypto}\n              returnToCryptosContainer={this.returnToCryptosContainer}\n              addCrypto={this.addCrypto}\n              />\n    }\n  }\n\n  render(){\n    return(\n      <div className=\"cryptoItem\">\n        <h1 className=\"ccHeader\">All Cryptocurrencies</h1>\n        <button className=\"CCbutton\" onClick={this.props.returnToHomepageFromCryptosContainers}>Return to homepage</button>\n            {this.renderDetailedUserCryptoView()}\n        {\n        this.state.cryptos.map((crypto)=>{\n          return <Crypto\n                  className=\"cryptoElement\"\n                  key={\"display-\"+crypto.name+\"-\"+crypto.id}\n                  crypto={crypto}\n                  setCurrentCrypto={this.setCurrentCrypto}\n                  />\n\n        })\n      }\n    </div>\n    )\n  }\n\n}\n\nexport default CryptosContainer\n"]},"metadata":{},"sourceType":"module"}