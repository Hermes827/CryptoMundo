{"ast":null,"code":"var _jsxFileName = \"/Users/chriscable/Desktop/module_5_project/cryptoproject_frontend1/src/containers/UserCryptoContainer.js\";\nimport React from 'react';\nimport UserCrypto from '../components/UserCrypto';\n\nclass UserCryptoContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getPrices = () => {\n      const values = [];\n      this.props.userCryptos.map(crypto => {\n        values.push(parseInt(crypto.price));\n      });\n\n      if (values.length >= 1) {\n        let total = values.reduce((x, y) => x + y);\n        return total;\n      }\n\n      let total = 0;\n      return total;\n    };\n\n    this.countCrypto = cc => {\n      const cryptos = [];\n      this.props.userCryptos.map(crypto => {\n        if (cc.name === crypto.name) {\n          cryptos.push(crypto);\n          console.log(crypto);\n        }\n      });\n      return cryptos.length;\n    };\n\n    this.distinctCrypto = () => {\n      const array = this.props.userCryptos;\n      const result = [];\n      const map = new Map();\n\n      for (const item of array) {\n        if (!map.has(item.id)) {\n          map.set(item.id, true); // set any value to Map\n\n          result.push({\n            id: item.id,\n            name: item.name\n          });\n        }\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"userCryptos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"My Cryptocurrencies\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Total portfolio value: $\", this.getPrices()), React.createElement(\"button\", {\n      className: \"CCbutton\",\n      onClick: this.props.returnHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Return to homepage\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.distinctCrypto().map(crypto => {\n      return React.createElement(UserCrypto, {\n        countCrypto: this.countCrypto,\n        key: \"user-\" + crypto.name + \"-\" + crypto.id,\n        toggleCryptos: this.props.toggleCryptos,\n        crypto: crypto,\n        setCurrentCrypto: this.props.setCurrentCrypto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default UserCryptoContainer;","map":{"version":3,"sources":["/Users/chriscable/Desktop/module_5_project/cryptoproject_frontend1/src/containers/UserCryptoContainer.js"],"names":["React","UserCrypto","UserCryptoContainer","Component","getPrices","values","props","userCryptos","map","crypto","push","parseInt","price","length","total","reduce","x","y","countCrypto","cc","cryptos","name","console","log","distinctCrypto","array","result","Map","item","has","id","set","render","returnHome","toggleCryptos","setCurrentCrypto"],"mappings":"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","sourcesContent":["import React from 'react'\nimport UserCrypto from '../components/UserCrypto'\n\nclass UserCryptoContainer extends React.Component {\n\ngetPrices = () => {\n  const values = []\n  this.props.userCryptos.map((crypto)=> {\n    values.push(parseInt(crypto.price))\n  })\n  if(values.length >= 1) {\n  let total = values.reduce((x, y) => x + y)\n  return total\n}\n  let total  = 0\n  return total\n}\n\ncountCrypto = (cc) => {\n  const cryptos = []\n  this.props.userCryptos.map((crypto) => {\n    if(cc.name === crypto.name) {\n      cryptos.push(crypto)\n      console.log(crypto)\n    }\n  })\n  return cryptos.length\n}\n\ndistinctCrypto = () => {\n  const array = this.props.userCryptos\nconst result = [];\nconst map = new Map();\nfor (const item of array) {\n    if(!map.has(item.id)){\n        map.set(item.id, true);    // set any value to Map\n        result.push({\n            id: item.id,\n            name: item.name\n        });\n    }\n}\nreturn result\n}\n\n  render(){\n    return(\n      <div className=\"userCryptos\">\n      <h1>My Cryptocurrencies</h1>\n      <h2>Total portfolio value: ${this.getPrices()}</h2>\n      <button className=\"CCbutton\" onClick={this.props.returnHome}>Return to homepage</button>\n\n      <div>\n\n      {this.distinctCrypto().map((crypto)=>{\n        return <UserCrypto\n                countCrypto={this.countCrypto}\n                key={\"user-\"+crypto.name+\"-\"+crypto.id}\n                toggleCryptos={this.props.toggleCryptos}\n                crypto={crypto}\n                setCurrentCrypto={this.props.setCurrentCrypto}\n                />\n      })}\n      </div>\n      </div>\n    )\n  }\n\n}\n\nexport default UserCryptoContainer\n"]},"metadata":{},"sourceType":"module"}