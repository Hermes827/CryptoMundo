{"ast":null,"code":"var _jsxFileName = \"/Users/chriscable/Desktop/projects/CryptoMundo/frontend/src/App.js\";\nimport React from 'react';\nimport Login from './components/login';\nimport Banner from './components/Banner';\nimport NewUserForm from './components/NewUserForm';\nimport { Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport centerConsole from './containers/centerConsole';\nimport EditUserContainer from './containers/EditUserContainer';\nimport './App.css';\nimport UserCryptosContainer from './containers/UserCryptosContainer';\nimport UserCryptoDetailedView from './components/UserCryptoDetailedView';\nimport NewsContainer from './containers/newsContainer';\nimport ArticleView from './components/articleView';\nimport { NEWS_API } from './constants';\nimport { USER_URL } from './constants';\nimport { LOGIN_URL } from './constants';\nimport { PROFILE } from './constants';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setEdit = () => {\n      this.setState({\n        hasClickedSettings: !this.state.hasClickedSettings\n      });\n      this.props.history.push('/centerConsole');\n    };\n\n    this.displayUserCryptos = () => {\n      if (!localStorage.token) {\n        return;\n      }\n\n      fetch(\"http://localhost:3000/api/v1/profile\", {\n        method: \"GET\",\n        headers: {\n          'Authorization': \"Bearer \" + localStorage.token\n        }\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          userCryptos: data.user.cryptos,\n          cryptosAreLoading: false\n        });\n      });\n    };\n\n    this.setCurrentCrypto = crypto => {\n      this.setState({\n        currentCrypto: crypto,\n        lookingAtSingleCrypto: true\n      });\n      this.props.history.push('/my-crypto/' + crypto.id);\n    };\n\n    this.countCrypto = cc => {\n      const cryptos = [];\n      this.state.userCryptos.map(crypto => {\n        if (cc.name === crypto.name) {\n          cryptos.push(crypto);\n        }\n      });\n      return cryptos.length;\n    };\n\n    this.renderDetailedUserCryptoView = () => {\n      const _this$state = this.state,\n            userCryptos = _this$state.userCryptos,\n            currentCrypto = _this$state.currentCrypto,\n            lookingAtSingleCrypto = _this$state.lookingAtSingleCrypto;\n\n      if (lookingAtSingleCrypto === true) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, React.createElement(UserCryptoDetailedView, {\n          countCrypto: this.countCrypto,\n          currentCrypto: currentCrypto,\n          returnToUserCryptosContainer: this.returnToUserCryptosContainer,\n          deleteCrypto: this.deleteCrypto,\n          error: this.state.error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.returnToUserCryptosContainer = () => {\n      this.setState({\n        currentCrypto: null,\n        lookingAtSingleCrypto: false\n      });\n    };\n\n    this.returnToHomepageFromCryptosContainers = () => {\n      this.setState({\n        currentCrypto: null,\n        lookingAtSingleCrypto: false\n      });\n      this.props.history.push('/centerConsole');\n    };\n\n    this.deleteCrypto = crypto => {\n      fetch(\"http://localhost:3000/api/v1/remove_crypto/\" + crypto.id, {\n        method: \"DELETE\",\n        headers: {\n          'Authorization': \"Bearer \" + localStorage.token\n        },\n        body: JSON.stringify({\n          crypto_id: crypto.id\n        })\n      }).then(res => res.json()).then(data => {\n        let cryptoNames = data.user.cryptos.map(crypto => {\n          return crypto.name;\n        });\n\n        if (!cryptoNames.includes(crypto.name)) {\n          setTimeout(() => this.setState({\n            currentCrypto: null,\n            lookingAtSingleCrypto: false\n          }), 2000);\n        }\n\n        this.setError(\"Deleted \".concat(crypto.name, \" from Cryptos\"));\n        this.displayUserCryptos();\n      });\n    };\n\n    this.getNews = () => {\n      fetch(NEWS_API).then(res => res.json()).then(data => {\n        this.setState({\n          news: data.articles\n        });\n      });\n    };\n\n    this.setCurrentNewsArticle = article => {\n      this.setState({\n        currentNewsArticle: article,\n        lookingAtSingleNewsArticle: true\n      });\n    };\n\n    this.renderDetailedNewsView = () => {\n      const _this$state2 = this.state,\n            currentNewsArticle = _this$state2.currentNewsArticle,\n            lookingAtSingleNewsArticle = _this$state2.lookingAtSingleNewsArticle;\n\n      if (lookingAtSingleNewsArticle === true) {\n        return React.createElement(ArticleView, {\n          currentNewsArticle: currentNewsArticle,\n          returnToNewsContainer: this.returnToNewsContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.returnToNewsContainer = () => {\n      this.setState({\n        currentNewsArticle: null,\n        lookingAtSingleNewsArticle: false\n      });\n    };\n\n    this.returnToHomepageFromNewsContainer = () => {\n      this.setState({\n        currentNewsArticle: null,\n        lookingAtSingleNewsArticle: false\n      });\n      this.props.history.push('/centerConsole');\n    };\n\n    this.state = {\n      current_user: {},\n      error: \"\",\n      feedback: \"\",\n      userCryptos: [],\n      // hasClickedMyCryptos: false,\n      currentCrypto: {},\n      lookingAtSingleCrypto: false,\n      cryptosAreLoading: false,\n      news: [],\n      currentNewsArticle: {},\n      lookingAtSingleNewsArticle: false,\n      hasClickedSettings: false\n    };\n    this.createNewUser = this.createNewUser.bind(this);\n    this.attemptLogin = this.attemptLogin.bind(this);\n    this.setActiveUser = this.setActiveUser.bind(this);\n    this.logout = this.logout.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n    this.setError = this.setError.bind(this);\n    this.setFeedback = this.setFeedback.bind(this);\n    this.renewState();\n  }\n\n  setFeedback(str) {\n    this.setState({\n      feedback: str\n    });\n    setTimeout(() => this.setState({\n      feedback: \"\"\n    }), 1500);\n  }\n\n  setError(str) {\n    this.setState({\n      error: str\n    });\n    setTimeout(() => this.setState({\n      error: \"\"\n    }), 1500);\n  } // user stuff\n\n\n  createNewUser(user) {\n    fetch(USER_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      this.setActiveUser(data);\n      this.props.history.push('/centerConsole');\n    });\n  } // setActiveUser(data){\n  //     this.setState({\n  //       current_user: data.user,\n  //       error: \"\"\n  //     })\n  //     localStorage.token = data.jwt\n  //     console.log(data)\n  //   }\n\n\n  renewState() {\n    //this function is connected with setactiveuser \"soft\"\n    if (!localStorage.token) {\n      return;\n    }\n\n    fetch(\"http://localhost:3000/api/v1/profile\", {\n      method: \"GET\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    }).then(res => res.json()).then(data => this.setActiveUser(data, \"soft\"));\n  }\n\n  setActiveUser(data, mode = \"hard\") {\n    if (data.message && mode === \"soft\") {\n      return;\n    } else if (data.message) {\n      this.setState({\n        error: data.message\n      });\n    } else {\n      this.setState({\n        current_user: data.user,\n        error: \"\"\n      });\n\n      if (data.jwt) {\n        localStorage.token = data.jwt;\n      }\n    }\n  } // setActiveUser(data, mode=\"hard\"){\n  //   if(data.message && mode === \"soft\"){\n  //     return\n  //   } else if(data.message){\n  //     this.setState({error: data.message})\n  //   } else {\n  //     this.setState({\n  //       current_user: data.user,\n  //       error: \"\"\n  //     })\n  //     if(data.jwt){localStorage.token = data.jwt}\n  //   }\n  // }\n\n\n  updateUser(user) {\n    fetch(USER_URL + \"/\".concat(user.id), {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.token,\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n      this.props.history.push('/centerConsole');\n    });\n  } // renderEditUser = () => {\n  // if(this.state.hasClickedSettings === true) {\n  //   return <EditUserContainer\n  //             current_user={this.state.current_user}\n  //             updateUser={this.updateUser}\n  //             deleteUser={this.deleteUser}\n  //             setEdit={this.setEdit}\n  //           />\n  // }\n  // }\n\n\n  deleteUser(id) {\n    fetch(USER_URL + \"/\".concat(id), {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    }).then(() => this.logout());\n  } // login\n\n\n  attemptLogin(user) {\n    fetch(LOGIN_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n\n      if (!data.message) {\n        this.props.history.push('/centerConsole');\n      }\n    });\n  }\n\n  logout() {\n    this.setState({\n      current_user: {},\n      // hasClickedMyCryptos: false,\n      currentCrypto: {},\n      lookingAtSingleCrypto: false\n    });\n    delete localStorage.token;\n    this.props.history.push('/login');\n  } // Usercrypto\n\n\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      render: () => React.createElement(Banner, {\n        current_user: this.state.current_user,\n        logout: this.logout,\n        displayUserCryptos: this.displayUserCryptos,\n        getNews: this.getNews,\n        setEdit: this.setEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/news\",\n      render: () => React.createElement(NewsContainer, {\n        returnToHomepageFromNewsContainer: this.returnToHomepageFromNewsContainer,\n        setCurrentNewsArticle: this.setCurrentNewsArticle,\n        news: this.state.news,\n        currentNewsArticle: this.state.currentNewsArticle,\n        lookingAtSingleNewsArticle: this.state.lookingAtSingleNewsArticle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }), this.renderDetailedNewsView(), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => React.createElement(Login, {\n        attemptLogin: this.attemptLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/user_signup\",\n      render: () => React.createElement(NewUserForm, {\n        createNewUser: this.createNewUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/my-crypto\",\n      render: () => React.createElement(UserCryptosContainer, {\n        returnToHomepageFromCryptosContainers: this.returnToHomepageFromCryptosContainers,\n        userCryptos: this.state.userCryptos,\n        setCurrentCrypto: this.setCurrentCrypto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }), this.renderDetailedUserCryptoView(), React.createElement(Route, {\n      exact: true,\n      path: \"/centerConsole\",\n      render: () => React.createElement(centerConsole, {\n        setFeedback: this.setFeedback,\n        feedback: this.state.feedback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/update_profile\",\n      render: () => React.createElement(EditUserContainer, {\n        current_user: this.state.current_user,\n        updateUser: this.updateUser,\n        deleteUser: this.deleteUser,\n        setEdit: this.setEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/chriscable/Desktop/projects/CryptoMundo/frontend/src/App.js"],"names":["React","Login","Banner","NewUserForm","Route","withRouter","centerConsole","EditUserContainer","UserCryptosContainer","UserCryptoDetailedView","NewsContainer","ArticleView","NEWS_API","USER_URL","LOGIN_URL","PROFILE","App","Component","constructor","props","setEdit","setState","hasClickedSettings","state","history","push","displayUserCryptos","localStorage","token","fetch","method","headers","then","res","json","data","userCryptos","user","cryptos","cryptosAreLoading","setCurrentCrypto","crypto","currentCrypto","lookingAtSingleCrypto","id","countCrypto","cc","map","name","length","renderDetailedUserCryptoView","returnToUserCryptosContainer","deleteCrypto","error","returnToHomepageFromCryptosContainers","body","JSON","stringify","crypto_id","cryptoNames","includes","setTimeout","setError","getNews","news","articles","setCurrentNewsArticle","article","currentNewsArticle","lookingAtSingleNewsArticle","renderDetailedNewsView","returnToNewsContainer","returnToHomepageFromNewsContainer","current_user","feedback","createNewUser","bind","attemptLogin","setActiveUser","logout","updateUser","deleteUser","setFeedback","renewState","str","console","log","mode","message","jwt","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Login from './components/login';\nimport Banner from './components/Banner'\nimport NewUserForm from './components/NewUserForm'\nimport { Route } from 'react-router-dom';\nimport {withRouter} from 'react-router';\nimport centerConsole from './containers/centerConsole'\nimport EditUserContainer from './containers/EditUserContainer'\nimport './App.css';\nimport UserCryptosContainer from './containers/UserCryptosContainer'\nimport UserCryptoDetailedView from './components/UserCryptoDetailedView'\nimport NewsContainer from './containers/newsContainer'\nimport ArticleView from './components/articleView'\nimport {NEWS_API} from './constants'\nimport {USER_URL} from './constants'\nimport {LOGIN_URL} from './constants'\nimport {PROFILE} from './constants'\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      current_user: {},\n      error: \"\",\n      feedback: \"\",\n      userCryptos: [],\n      // hasClickedMyCryptos: false,\n      currentCrypto: {},\n      lookingAtSingleCrypto: false,\n      cryptosAreLoading: false,\n      news: [],\n      currentNewsArticle: {},\n      lookingAtSingleNewsArticle: false,\n      hasClickedSettings: false\n    }\n\n    this.createNewUser = this.createNewUser.bind(this)\n    this.attemptLogin = this.attemptLogin.bind(this)\n    this.setActiveUser = this.setActiveUser.bind(this)\n    this.logout = this.logout.bind(this)\n    this.updateUser = this.updateUser.bind(this)\n    this.deleteUser = this.deleteUser.bind(this)\n    this.setError = this.setError.bind(this)\n    this.setFeedback = this.setFeedback.bind(this)\n    this.renewState();\n  }\n\n  setFeedback(str){\n    this.setState({\n      feedback: str\n    })\n    setTimeout(() => this.setState({feedback: \"\"}), 1500)\n  }\n\n  setError(str){\n    this.setState({\n      error: str\n    })\n    setTimeout(() => this.setState({error: \"\"}), 1500)\n  }\n\n  // user stuff\n\n  createNewUser(user){\n    fetch(USER_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({user})\n    })\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n      this.setActiveUser(data)\n      this.props.history.push('/centerConsole')\n    })\n  }\n\n  // setActiveUser(data){\n  //     this.setState({\n  //       current_user: data.user,\n  //       error: \"\"\n  //     })\n  //     localStorage.token = data.jwt\n  //     console.log(data)\n  //   }\n\n  renewState(){ //this function is connected with setactiveuser \"soft\"\n  if(!localStorage.token){return}\n  fetch(\"http://localhost:3000/api/v1/profile\", {\n    method: \"GET\",\n    headers: {\n      'Authorization': \"Bearer \" + localStorage.token\n    }\n  })\n  .then(res => res.json())\n  .then(data => this.setActiveUser(data, \"soft\"))\n}\n\n\n  setActiveUser(data, mode=\"hard\"){\n    if(data.message && mode === \"soft\"){\n      return\n    } else if(data.message){\n      this.setState({error: data.message})\n    } else {\n      this.setState({\n        current_user: data.user,\n        error: \"\"\n      })\n      if(data.jwt){localStorage.token = data.jwt}\n    }\n  }\n\n  // setActiveUser(data, mode=\"hard\"){\n  //   if(data.message && mode === \"soft\"){\n  //     return\n  //   } else if(data.message){\n  //     this.setState({error: data.message})\n  //   } else {\n  //     this.setState({\n  //       current_user: data.user,\n  //       error: \"\"\n  //     })\n  //     if(data.jwt){localStorage.token = data.jwt}\n  //   }\n  // }\n\n  updateUser(user){\n    fetch(USER_URL + `/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.token,\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({user})\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      this.props.history.push('/centerConsole')\n    })\n  }\n\n  // renderEditUser = () => {\n  // if(this.state.hasClickedSettings === true) {\n  //   return <EditUserContainer\n  //             current_user={this.state.current_user}\n  //             updateUser={this.updateUser}\n  //             deleteUser={this.deleteUser}\n  //             setEdit={this.setEdit}\n  //           />\n  // }\n  // }\n\n  setEdit = () => {\n    this.setState({\n      hasClickedSettings: !this.state.hasClickedSettings\n    })\n    this.props.history.push('/centerConsole')\n\n  }\n\n  deleteUser(id){\n    fetch(USER_URL + `/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    })\n    .then( () => this.logout())\n  }\n\n  // login\n\n  attemptLogin(user){\n    fetch(LOGIN_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({user})\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      if(!data.message){\n        this.props.history.push('/centerConsole')\n      }\n    })\n  }\n\n  logout(){\n    this.setState({\n      current_user: {},\n      // hasClickedMyCryptos: false,\n      currentCrypto: {},\n      lookingAtSingleCrypto: false\n    })\n    delete localStorage.token\n    this.props.history.push('/login')\n  }\n\n  // Usercrypto\n\n  displayUserCryptos = () => {\n    if(!localStorage.token){return}\n    fetch(\"http://localhost:3000/api/v1/profile\", {\n      method: \"GET\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setState({\n        userCryptos: data.user.cryptos,\n        cryptosAreLoading: false\n      })\n    })\n  }\n\n  setCurrentCrypto = (crypto) => {\n    this.setState({\n      currentCrypto: crypto,\n      lookingAtSingleCrypto: true\n    })\n    this.props.history.push('/my-crypto/' + crypto.id)\n  }\n\n  countCrypto = (cc) => {\n    const cryptos = []\n    this.state.userCryptos.map((crypto) => {\n      if(cc.name === crypto.name) {\n        cryptos.push(crypto)\n      }\n    })\n    return cryptos.length\n  }\n\n  renderDetailedUserCryptoView = () => {\n    const {userCryptos, currentCrypto, lookingAtSingleCrypto} = this.state\n    if(lookingAtSingleCrypto === true) {\n      return(\n        <div>\n              <UserCryptoDetailedView\n              countCrypto={this.countCrypto}\n              currentCrypto={currentCrypto}\n              returnToUserCryptosContainer={this.returnToUserCryptosContainer}\n              deleteCrypto={this.deleteCrypto}\n              error={this.state.error}\n              />\n        </div>\n          )\n    }\n  }\n\n  returnToUserCryptosContainer = () => {\n    this.setState({\n      currentCrypto: null,\n      lookingAtSingleCrypto: false,\n    })\n  }\n\n  returnToHomepageFromCryptosContainers = () => {\n    this.setState({\n      currentCrypto: null,\n      lookingAtSingleCrypto: false\n    })\n    this.props.history.push('/centerConsole')\n  }\n\n\n  deleteCrypto = (crypto) => {\n    fetch(\"http://localhost:3000/api/v1/remove_crypto/\"+ crypto.id, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      },\n      body: JSON.stringify({crypto_id: crypto.id})\n    })\n    .then(res => res.json())\n    .then(data => {\n      let cryptoNames = data.user.cryptos.map((crypto) => {\n        return crypto.name\n      })\n      if(!cryptoNames.includes(crypto.name)){\n        setTimeout(() => this.setState({\n          currentCrypto: null,\n          lookingAtSingleCrypto: false,\n        }), 2000)\n      }\n      this.setError(`Deleted ${crypto.name} from Cryptos`)\n      this.displayUserCryptos()\n    })\n  }\n\n//  news\n\ngetNews = () => {\n  fetch(NEWS_API)\n    .then(res => res.json())\n    .then(data => {\n      this.setState({\n        news: data.articles\n      })\n    })\n}\n\nsetCurrentNewsArticle = (article) => {\n  this.setState({\n    currentNewsArticle: article,\n    lookingAtSingleNewsArticle: true\n  })\n}\n\nrenderDetailedNewsView = () => {\nconst {currentNewsArticle, lookingAtSingleNewsArticle} = this.state\nif(lookingAtSingleNewsArticle === true) {\n    return (\n          <ArticleView\n          currentNewsArticle={currentNewsArticle}\n          returnToNewsContainer={this.returnToNewsContainer}\n          />\n        )\n  }\n}\n\nreturnToNewsContainer = () => {\n  this.setState({\n    currentNewsArticle: null,\n    lookingAtSingleNewsArticle: false\n  })\n}\n\nreturnToHomepageFromNewsContainer = () => {\n  this.setState({\n    currentNewsArticle: null,\n    lookingAtSingleNewsArticle: false\n  })\n  this.props.history.push('/centerConsole')\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n\n  render(){\n\n    return (\n      <div className=\"App\">\n        <Route path='/' render={() => <Banner\n                                          current_user={this.state.current_user}\n                                          logout={this.logout}\n                                          displayUserCryptos={this.displayUserCryptos}\n                                          getNews={this.getNews}\n                                          setEdit={this.setEdit}\n                                      />}/>\n\n          <Route exact path=\"/news\" render={() => <NewsContainer\n                                                      returnToHomepageFromNewsContainer={this.returnToHomepageFromNewsContainer}\n                                                      setCurrentNewsArticle={this.setCurrentNewsArticle}\n                                                      news={this.state.news}\n                                                      currentNewsArticle={this.state.currentNewsArticle}\n                                                      lookingAtSingleNewsArticle={this.state.lookingAtSingleNewsArticle}\n                                                  />}/>\n                                                {this.renderDetailedNewsView()}\n\n          <Route exact path=\"/login\" render={() => <Login attemptLogin={this.attemptLogin}/>}/>\n\n          <Route exact path=\"/user_signup\" render={() => <NewUserForm createNewUser={this.createNewUser}/>}/>\n\n          <Route path='/my-crypto' render={() => <UserCryptosContainer\n                                                      returnToHomepageFromCryptosContainers={this.returnToHomepageFromCryptosContainers}\n                                                      userCryptos={this.state.userCryptos}\n                                                      setCurrentCrypto={this.setCurrentCrypto}\n                                                      />}/>\n                                                      {this.renderDetailedUserCryptoView()}\n\n          <Route exact path=\"/centerConsole\" render={() =>  <centerConsole\n                                                         setFeedback={this.setFeedback}\n                                                         feedback={this.state.feedback}\n                                                         />}\n                                                         />\n\n          <Route exact path=\"/update_profile\" render={() => <EditUserContainer\n                                                              current_user={this.state.current_user}\n                                                              updateUser={this.updateUser}\n                                                              deleteUser={this.deleteUser}\n                                                              setEdit={this.setEdit}\n                                                              />}/>\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}