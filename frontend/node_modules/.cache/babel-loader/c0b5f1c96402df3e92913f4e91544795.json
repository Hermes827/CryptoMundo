{"ast":null,"code":"var _jsxFileName = \"/Users/chriscable/Desktop/projects/CryptoMundo/frontend/src/containers/UserCryptosContainer.js\";\nimport React from 'react';\nimport UserCrypto from '../components/UserCrypto';\nimport { withRouter } from 'react-router';\n\nclass UserCryptosContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getPrices = () => {\n      const values = [];\n      this.props.userCryptos.map(crypto => {\n        values.push(parseInt(crypto.price));\n      });\n\n      if (values.length >= 1) {\n        let total = values.reduce((x, y) => x + y);\n        return total;\n      }\n\n      let total = 0;\n      return total;\n    };\n\n    this.countCrypto = cc => {\n      const cryptos = [];\n      this.props.userCryptos.map(crypto => {\n        if (cc.name === crypto.name) {\n          cryptos.push(crypto);\n        }\n      });\n      return cryptos.length;\n    };\n\n    this.distinctCrypto = () => {\n      const array = this.props.userCryptos;\n      const result = [];\n      const map = new Map();\n\n      for (const item of array) {\n        if (!map.has(item.id)) {\n          map.set(item.id, true); // set any value to Map\n\n          result.push({\n            id: item.id,\n            name: item.name,\n            image: item.image,\n            highday: item.highday,\n            lowday: item.lowday,\n            market: item.market,\n            price: item.price,\n            supply: item.supply,\n            volume: item.volume\n          });\n        }\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"userCryptos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"ccHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"My Cryptocurrencies\"), React.createElement(\"h1\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Total portfolio value: $\", this.getPrices()), React.createElement(\"button\", {\n      className: \"CCbutton\",\n      onClick: this.props.returnToHomepageFromCryptosContainers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Return to homepage\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.distinctCrypto().map(crypto => {\n      return React.createElement(UserCrypto, {\n        countCrypto: this.countCrypto,\n        key: \"user-\" + crypto.name + \"-\" + crypto.id,\n        crypto: crypto,\n        setCurrentCrypto: this.props.setCurrentCrypto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default withRouter(UserCryptosContainer);","map":{"version":3,"sources":["/Users/chriscable/Desktop/projects/CryptoMundo/frontend/src/containers/UserCryptosContainer.js"],"names":["React","UserCrypto","withRouter","UserCryptosContainer","Component","getPrices","values","props","userCryptos","map","crypto","push","parseInt","price","length","total","reduce","x","y","countCrypto","cc","cryptos","name","distinctCrypto","array","result","Map","item","has","id","set","image","highday","lowday","market","supply","volume","render","returnToHomepageFromCryptosContainers","setCurrentCrypto"],"mappings":"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","sourcesContent":["import React from 'react'\nimport UserCrypto from '../components/UserCrypto'\nimport {withRouter} from 'react-router';\n\n\nclass UserCryptosContainer extends React.Component {\n\ngetPrices = () => {\n  const values = []\n  this.props.userCryptos.map((crypto)=> {\n    values.push(parseInt(crypto.price))\n  })\n  if(values.length >= 1) {\n  let total = values.reduce((x, y) => x + y)\n  return total\n}\n  let total  = 0\n  return total\n}\n\ncountCrypto = (cc) => {\n  const cryptos = []\n  this.props.userCryptos.map((crypto) => {\n    if(cc.name === crypto.name) {\n      cryptos.push(crypto)\n    }\n  })\n  return cryptos.length\n}\n\ndistinctCrypto = () => {\nconst array = this.props.userCryptos\nconst result = [];\nconst map = new Map();\nfor (const item of array) {\n    if(!map.has(item.id)){\n        map.set(item.id, true);    // set any value to Map\n        result.push({\n            id: item.id,\n            name: item.name,\n            image: item.image,\n            highday: item.highday,\n            lowday: item.lowday,\n            market: item.market,\n            price: item.price,\n            supply: item.supply,\n            volume: item.volume\n        });\n    }\n}\nreturn result\n}\n\n  render(){\n    return(\n      <div className=\"userCryptos\">\n      <h1 className=\"ccHeader\">My Cryptocurrencies</h1>\n      <h1 className=\"\">Total portfolio value: ${this.getPrices()}</h1>\n      <button className=\"CCbutton\" onClick={this.props.returnToHomepageFromCryptosContainers}>Return to homepage</button>\n      <div>\n\n      {this.distinctCrypto().map((crypto)=>{\n        return <UserCrypto\n                countCrypto={this.countCrypto}\n                key={\"user-\"+crypto.name+\"-\"+crypto.id}\n                crypto={crypto}\n                setCurrentCrypto={this.props.setCurrentCrypto}\n                />\n      })}\n      </div>\n      </div>\n    )\n  }\n\n}\n\nexport default withRouter(UserCryptosContainer)\n"]},"metadata":{},"sourceType":"module"}