{"ast":null,"code":"var _jsxFileName = \"/Users/chriscable/Desktop/module_5_project/cryptoproject_frontend1/src/App.js\";\nimport React from 'react';\nimport Login from './components/login';\nimport Banner from './components/Banner';\nimport NewUserForm from './components/NewUserForm';\nimport { Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport Dashboard from './containers/Dashboard';\nimport EditUserContainer from './containers/EditUserContainer';\nimport './App.css';\nimport UserCryptosContainer from './containers/UserCryptosContainer';\nimport UserCryptoDetailedView from './components/UserCryptoDetailedView';\nimport NewsContainer from './containers/newsContainer';\nimport ArticleView from './components/articleView';\nconst USER_URL = \"http://localhost:3000/api/v1/users\";\nconst LOGIN_URL = \"http://localhost:3000/api/v1/login\";\nconst newsAPI = \"https://newsapi.org/v2/everything?q=cryptocurrency&from=2019-05-19&sortBy=publishedAt&apiKey=4c2d0d49eecc43688aeefdd3bd0ff4fe\"; // const newsAPI = \"https://min-api.cryptocompare.com/data/top/totalvolfull?limit=10&tsym=USD&api_key={2eb0a0afcdbd0af89e90104132e9424984ac9324e5c2b62272a6afbe9567cb19}\"\n\nclass App extends React.Component {\n  componentDidMount() {\n    fetch(newsAPI).then(res => res.json()).then(data => {\n      this.setState({\n        news: data.articles\n      });\n      console.log(data.articles);\n    });\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.displayUserCryptos = () => {\n      if (!localStorage.token) {\n        return;\n      }\n\n      fetch(\"http://localhost:3000/api/v1/profile\", {\n        method: \"GET\",\n        headers: {\n          'Authorization': \"Bearer \" + localStorage.token\n        }\n      }).then(res => res.json()).then(data => {\n        // this.setState({\n        //   userCryptos: data.user.cryptos,\n        //   hasClickedMyCryptos: !this.state.hasClickedMyCryptos,\n        //   cryptosAreLoading: false\n        // })\n        console.log(data);\n      });\n    };\n\n    this.setCurrentCrypto = crypto => {\n      this.setState({\n        currentCrypto: crypto,\n        lookingAtSingleCrypto: true\n      });\n      this.props.history.push('/my-crypto/' + crypto.id);\n    };\n\n    this.setCurrentCrypto1 = crypto => {\n      this.setState({\n        currentCrypto: crypto,\n        lookingAtSingleCrypto: true\n      }); // this.props.history.push('/my-crypto/' + crypto.id)\n    };\n\n    this.renderUserCryptos = () => {\n      const userCryptos = this.state.userCryptos;\n\n      if (this.state.hasClickedMyCryptos === true && !this.state.cryptosAreLoading) {\n        return React.createElement(UserCryptosContainer, {\n          returnHome: this.returnHome,\n          toggleCryptos: this.toggleMyCryptos,\n          userCryptos: userCryptos,\n          setCurrentCrypto: this.setCurrentCrypto,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.countCrypto = cc => {\n      const cryptos = [];\n      this.state.userCryptos.map(crypto => {\n        if (cc.name === crypto.name) {\n          cryptos.push(crypto);\n          console.log(crypto);\n        }\n      });\n      return cryptos.length;\n    };\n\n    this.renderDetailedView = () => {\n      const userCryptos = this.state.userCryptos;\n      const currentCrypto = this.state.currentCrypto;\n\n      if (this.state.lookingAtSingleCrypto === true) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, React.createElement(UserCryptosContainer, {\n          returnHome: this.returnHome,\n          toggleCryptos: this.toggleMyCryptos,\n          userCryptos: userCryptos,\n          setCurrentCrypto: this.setCurrentCrypto,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }), React.createElement(UserCryptoDetailedView, {\n          countCrypto: this.countCrypto,\n          currentCrypto: currentCrypto,\n          returnMyCryptos: this.returnMyCryptos,\n          deleteCrypto: this.deleteCrypto,\n          error: this.state.error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.returnMyCryptos = () => {\n      this.setState({\n        currentCrypto: null,\n        lookingAtSingleCrypto: false,\n        hasClickedMyCryptos: true\n      });\n      this.props.history.push('/dashboard');\n    };\n\n    this.returnMainMenu = () => {\n      this.setState({\n        hasClickedMyCryptos: false,\n        lookingAtSingleCrypto: false\n      });\n      this.props.history.push('/dashboard');\n    };\n\n    this.returnHome = () => {\n      console.log(\"hello\");\n      this.setState({\n        cryptosAreLoading: true,\n        currentCrypto: null,\n        lookingAtSingleCrypto: false,\n        hasClickedMyCryptos: true\n      });\n    };\n\n    this.deleteCrypto = crypto => {\n      const cryptoId = crypto.id;\n      fetch(\"http://localhost:3000/api/v1/remove_crypto/\" + cryptoId, {\n        method: \"DELETE\",\n        headers: {\n          'Authorization': \"Bearer \" + localStorage.token\n        },\n        body: JSON.stringify({\n          crypto_id: cryptoId\n        })\n      }).then(res => res.json()).then(data => {\n        let cryptoNames = data.user.cryptos.map(crypto => {\n          return crypto.name;\n        }); // console.log(cryptoNames)\n        // console.log(data.user.cryptos)\n\n        if (!cryptoNames.includes(crypto.name)) {\n          setTimeout(() => this.setState({\n            currentCrypto: null,\n            lookingAtSingleCrypto: false\n          }), 2000);\n        }\n\n        this.setError(\"Deleted \".concat(crypto.name, \" from Cryptos\"));\n        this.displayUserCryptos();\n      });\n    };\n\n    this.setNewsState = () => {\n      this.setState({\n        hasClickedNewsDBButton: true\n      });\n    };\n\n    this.returnToHomepageFromNewsContainer = () => {\n      this.setState({\n        currentNewsArticle: null,\n        lookingAtSingleNewsArticle: false,\n        hasClickedNewsDBButton: false\n      });\n    };\n\n    this.toggleNews = () => {\n      this.setState({\n        hasClickedNewsDBButton: !this.state.hasClickedNewsDBButton\n      });\n    };\n\n    this.setCurrentNewsArticle = article => {\n      this.setState({\n        currentNewsArticle: article,\n        lookingAtSingleNewsArticle: true\n      });\n    };\n\n    this.returnToNewsContainer = () => {\n      this.setState({\n        currentNewsArticle: null,\n        lookingAtSingleNewsArticle: false,\n        hasClickedNewsDBButton: true\n      });\n    };\n\n    this.renderNews = () => {\n      const news = this.state.news;\n\n      if (this.state.hasClickedNewsDBButton === true) {\n        return React.createElement(NewsContainer, {\n          returnToHomepageFromNewsContainer: this.returnToHomepageFromNewsContainer,\n          toggleNews: this.toggleNews,\n          setCurrentNewsArticle: this.setCurrentNewsArticle,\n          news: news,\n          currentNewsArticle: this.state.currentNewsArticle,\n          lookingAtSingleNewsArticle: this.state.lookingAtSingleNewsArticle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.renderDetailedNewsView = () => {\n      const _this$state = this.state,\n            news = _this$state.news,\n            currentNewsArticle = _this$state.currentNewsArticle;\n\n      if (this.state.lookingAtSingleNewsArticle === true) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393\n          },\n          __self: this\n        }, React.createElement(NewsContainer, {\n          returnToHomepageFromNewsContainer: this.returnToHomepageFromNewsContainer,\n          toggleNews: this.toggleNews,\n          setCurrentNewsArticle: this.setCurrentNewsArticle,\n          news: news,\n          currentNewsArticle: this.state.currentNewsArticle,\n          lookingAtSingleNewsArticle: this.state.lookingAtSingleNewsArticle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        }), React.createElement(ArticleView, {\n          currentNewsArticle: currentNewsArticle,\n          returnToNewsContainer: this.returnToNewsContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.renderEditUser = () => {\n      if (this.state.hasClickedSettings === true) {\n        return React.createElement(EditUserContainer, {\n          current_user: this.state.current_user,\n          updateUser: this.updateUser,\n          deleteUser: this.deleteUser,\n          setEdit: this.setEdit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.setEdit = () => {\n      console.log(\"hello\");\n      this.setState({\n        hasClickedSettings: !this.state.hasClickedSettings\n      });\n    };\n\n    this.state = {\n      current_user: {},\n      error: \"\",\n      feedback: \"\",\n      userCryptos: [],\n      hasClickedMyCryptos: false,\n      currentCrypto: {},\n      lookingAtSingleCrypto: false,\n      cryptosAreLoading: false,\n      news: [],\n      hasClickedNewsDBButton: false,\n      currentNewsArticle: {},\n      lookingAtSingleNewsArticle: false,\n      hasClickedSettings: false\n    };\n    this.createNewUser = this.createNewUser.bind(this);\n    this.attemptLogin = this.attemptLogin.bind(this);\n    this.setActiveUser = this.setActiveUser.bind(this);\n    this.logout = this.logout.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n    this.toggleMyCryptos = this.toggleMyCryptos.bind(this);\n    this.setError = this.setError.bind(this);\n    this.setFeedback = this.setFeedback.bind(this);\n    this.renewState();\n  }\n\n  setFeedback(str) {\n    this.setState({\n      feedback: str\n    });\n    setTimeout(() => this.setState({\n      feedback: \"\"\n    }), 1500);\n  }\n\n  setError(str) {\n    this.setState({\n      error: str\n    });\n    setTimeout(() => this.setState({\n      error: \"\"\n    }), 1500);\n  }\n\n  createNewUser(user) {\n    fetch(USER_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n      this.props.history.push('/dashboard');\n    });\n  }\n\n  attemptLogin(user) {\n    fetch(LOGIN_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n\n      if (!data.message) {\n        this.props.history.push('/dashboard');\n      }\n    });\n  }\n\n  setActiveUser(data, mode = \"hard\") {\n    if (data.message && mode === \"soft\") {\n      return;\n    } else if (data.message) {\n      this.setState({\n        error: data.message\n      });\n    } else {\n      this.setState({\n        current_user: data.user,\n        error: \"\"\n      });\n\n      if (data.jwt) {\n        localStorage.token = data.jwt;\n      }\n    }\n  }\n\n  logout() {\n    this.setState({\n      current_user: {},\n      hasClickedMyCryptos: false,\n      currentCrypto: {},\n      lookingAtSingleCrypto: false\n    });\n    delete localStorage.token;\n    this.props.history.push('/login');\n  }\n\n  renewState() {\n    if (!localStorage.token) {\n      return;\n    }\n\n    fetch(\"http://localhost:3000/api/v1/profile\", {\n      method: \"GET\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    }).then(res => res.json()).then(data => this.setActiveUser(data, \"soft\"));\n  }\n\n  toggleMyCryptos() {\n    this.setState({\n      hasClickedMyCryptos: !this.state.hasClickedMyCryptos\n    });\n  }\n\n  updateUser(user) {\n    fetch(USER_URL + \"/\".concat(user.id), {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.token,\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n      this.props.history.push('/dashboard');\n    });\n  }\n\n  deleteUser(id) {\n    fetch(USER_URL + \"/\".concat(id), {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    }).then(() => this.logout());\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      render: () => React.createElement(Banner, {\n        current_user: this.state.current_user,\n        logout: this.logout,\n        displayUserCryptos: this.displayUserCryptos,\n        returnMainMenu: this.returnMainMenu,\n        returnMainMenu1: this.returnMainMenu1,\n        hasClickedMyCryptos: this.state.hasClickedMyCryptos,\n        setNewsState: this.setNewsState,\n        setEdit: this.setEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/news\",\n      render: () => this.renderDetailedNewsView(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }), this.renderNews(), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => React.createElement(Login, {\n        attemptLogin: this.attemptLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/user_signup\",\n      render: () => React.createElement(NewUserForm, {\n        createNewUser: this.createNewUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/my-crypto\",\n      render: () => this.renderDetailedView(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }), this.renderUserCryptos(), React.createElement(Route, {\n      exact: true,\n      path: \"/dashboard\",\n      render: () => React.createElement(Dashboard, {\n        setFeedback: this.setFeedback,\n        feedback: this.state.feedback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/update_profile\",\n      render: () => this.renderEditUser(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/chriscable/Desktop/module_5_project/cryptoproject_frontend1/src/App.js"],"names":["React","Login","Banner","NewUserForm","Route","withRouter","Dashboard","EditUserContainer","UserCryptosContainer","UserCryptoDetailedView","NewsContainer","ArticleView","USER_URL","LOGIN_URL","newsAPI","App","Component","componentDidMount","fetch","then","res","json","data","setState","news","articles","console","log","constructor","props","displayUserCryptos","localStorage","token","method","headers","setCurrentCrypto","crypto","currentCrypto","lookingAtSingleCrypto","history","push","id","setCurrentCrypto1","renderUserCryptos","userCryptos","state","hasClickedMyCryptos","cryptosAreLoading","returnHome","toggleMyCryptos","countCrypto","cc","cryptos","map","name","length","renderDetailedView","returnMyCryptos","deleteCrypto","error","returnMainMenu","cryptoId","body","JSON","stringify","crypto_id","cryptoNames","user","includes","setTimeout","setError","setNewsState","hasClickedNewsDBButton","returnToHomepageFromNewsContainer","currentNewsArticle","lookingAtSingleNewsArticle","toggleNews","setCurrentNewsArticle","article","returnToNewsContainer","renderNews","renderDetailedNewsView","renderEditUser","hasClickedSettings","current_user","updateUser","deleteUser","setEdit","feedback","createNewUser","bind","attemptLogin","setActiveUser","logout","setFeedback","renewState","str","message","mode","jwt","render","returnMainMenu1"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Login from './components/login';\nimport Banner from './components/Banner'\nimport NewUserForm from './components/NewUserForm'\nimport { Route } from 'react-router-dom';\nimport {withRouter} from 'react-router';\nimport Dashboard from './containers/Dashboard'\nimport EditUserContainer from './containers/EditUserContainer'\nimport './App.css';\nimport UserCryptosContainer from './containers/UserCryptosContainer'\nimport UserCryptoDetailedView from './components/UserCryptoDetailedView'\nimport NewsContainer from './containers/newsContainer'\nimport ArticleView from './components/articleView'\n\nconst USER_URL = \"http://localhost:3000/api/v1/users\"\nconst LOGIN_URL = \"http://localhost:3000/api/v1/login\"\nconst newsAPI = \"https://newsapi.org/v2/everything?q=cryptocurrency&from=2019-05-19&sortBy=publishedAt&apiKey=4c2d0d49eecc43688aeefdd3bd0ff4fe\"\n\n// const newsAPI = \"https://min-api.cryptocompare.com/data/top/totalvolfull?limit=10&tsym=USD&api_key={2eb0a0afcdbd0af89e90104132e9424984ac9324e5c2b62272a6afbe9567cb19}\"\n\nclass App extends React.Component{\n\n  componentDidMount(){\n    fetch(newsAPI)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          news: data.articles\n        })\n        console.log(data.articles)\n      })\n  }\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      current_user: {},\n      error: \"\",\n      feedback: \"\",\n      userCryptos: [],\n      hasClickedMyCryptos: false,\n      currentCrypto: {},\n      lookingAtSingleCrypto: false,\n      cryptosAreLoading: false,\n      news: [],\n      hasClickedNewsDBButton: false,\n      currentNewsArticle: {},\n      lookingAtSingleNewsArticle: false,\n      hasClickedSettings: false\n    }\n\n    this.createNewUser = this.createNewUser.bind(this)\n    this.attemptLogin = this.attemptLogin.bind(this)\n    this.setActiveUser = this.setActiveUser.bind(this)\n    this.logout = this.logout.bind(this)\n    this.updateUser = this.updateUser.bind(this)\n    this.deleteUser = this.deleteUser.bind(this)\n    this.toggleMyCryptos = this.toggleMyCryptos.bind(this)\n    this.setError = this.setError.bind(this)\n    this.setFeedback = this.setFeedback.bind(this)\n\n\n    this.renewState();\n  }\n\n  setFeedback(str){\n    this.setState({\n      feedback: str\n    })\n    setTimeout(() => this.setState({feedback: \"\"}), 1500)\n  }\n\n  setError(str){\n    this.setState({\n      error: str\n    })\n    setTimeout(() => this.setState({error: \"\"}), 1500)\n  }\n\n  createNewUser(user){\n    fetch(USER_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({user})\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      this.props.history.push('/dashboard')\n    })\n  }\n\n  attemptLogin(user){\n    fetch(LOGIN_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({user})\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      if(!data.message){\n        this.props.history.push('/dashboard')\n      }\n    })\n  }\n\n  setActiveUser(data, mode=\"hard\"){\n    if(data.message && mode === \"soft\"){\n      return\n    } else if(data.message){\n      this.setState({error: data.message})\n    } else {\n      this.setState({\n        current_user: data.user,\n        error: \"\"\n      })\n      if(data.jwt){localStorage.token = data.jwt}\n    }\n  }\n\n  logout(){\n    this.setState({\n      current_user: {},\n      hasClickedMyCryptos: false,\n      currentCrypto: {},\n      lookingAtSingleCrypto: false\n    })\n    delete localStorage.token\n    this.props.history.push('/login')\n  }\n\n  renewState(){\n  if(!localStorage.token){return}\n  fetch(\"http://localhost:3000/api/v1/profile\", {\n    method: \"GET\",\n    headers: {\n      'Authorization': \"Bearer \" + localStorage.token\n    }\n  })\n  .then(res => res.json())\n  .then(data => this.setActiveUser(data, \"soft\"))\n}\n\n  displayUserCryptos = () => {\n    if(!localStorage.token){return}\n    fetch(\"http://localhost:3000/api/v1/profile\", {\n      method: \"GET\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      // this.setState({\n      //   userCryptos: data.user.cryptos,\n      //   hasClickedMyCryptos: !this.state.hasClickedMyCryptos,\n      //   cryptosAreLoading: false\n      // })\n      console.log(data)\n    })\n  }\n\n\n  toggleMyCryptos() {\n    this.setState({\n      hasClickedMyCryptos: !this.state.hasClickedMyCryptos\n    })\n  }\n\n  updateUser(user){\n    fetch(USER_URL + `/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.token,\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      this.props.history.push('/dashboard')\n    })\n  }\n\n  deleteUser(id){\n    fetch(USER_URL + `/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    })\n    .then( () => this.logout())\n  }\n\n  setCurrentCrypto = (crypto) => {\n    this.setState({\n      currentCrypto: crypto,\n      lookingAtSingleCrypto: true\n    })\n    this.props.history.push('/my-crypto/' + crypto.id)\n\n  }\n\n  setCurrentCrypto1 = (crypto) => {\n    this.setState({\n      currentCrypto: crypto,\n      lookingAtSingleCrypto: true\n    })\n    // this.props.history.push('/my-crypto/' + crypto.id)\n\n  }\n\n  renderUserCryptos = () => {\n    const {userCryptos} = this.state\n    if(this.state.hasClickedMyCryptos === true &&!this.state.cryptosAreLoading) {\n      return <UserCryptosContainer\n              returnHome={this.returnHome}\n              toggleCryptos={this.toggleMyCryptos}\n              userCryptos={userCryptos}\n              setCurrentCrypto={this.setCurrentCrypto}\n              />\n    }\n  }\n\n  countCrypto = (cc) => {\n    const cryptos = []\n    this.state.userCryptos.map((crypto) => {\n      if(cc.name === crypto.name) {\n        cryptos.push(crypto)\n        console.log(crypto)\n      }\n    })\n    return cryptos.length\n  }\n\n\n  renderDetailedView = () => {\n    const {userCryptos} = this.state\n    const {currentCrypto} = this.state\n    if(this.state.lookingAtSingleCrypto === true) {\n      return(\n        <div>\n              <UserCryptosContainer\n              returnHome={this.returnHome}\n              toggleCryptos={this.toggleMyCryptos}\n              userCryptos={userCryptos}\n              setCurrentCrypto={this.setCurrentCrypto}\n              />\n              <UserCryptoDetailedView\n              countCrypto={this.countCrypto}\n              currentCrypto={currentCrypto}\n              returnMyCryptos={this.returnMyCryptos}\n              deleteCrypto={this.deleteCrypto}\n              error={this.state.error}\n              />\n        </div>\n          )\n    }\n\n  }\n\n  returnMyCryptos = () => {\n    this.setState({\n      currentCrypto: null,\n      lookingAtSingleCrypto: false,\n      hasClickedMyCryptos: true\n    })\n    this.props.history.push('/dashboard')\n  }\n\n  returnMainMenu = () => {\n    this.setState({\n      hasClickedMyCryptos: false,\n      lookingAtSingleCrypto: false\n    })\n    this.props.history.push('/dashboard')\n  }\n\n  returnHome = () => {\n    console.log(\"hello\")\n    this.setState({\n      cryptosAreLoading: true,\n      currentCrypto: null,\n      lookingAtSingleCrypto: false,\n      hasClickedMyCryptos: true\n    })\n  }\n\n\n  deleteCrypto = (crypto) => {\n    const cryptoId = crypto.id\n    fetch(\"http://localhost:3000/api/v1/remove_crypto/\"+ cryptoId, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      },\n      body: JSON.stringify({crypto_id: cryptoId})\n    })\n    .then(res => res.json())\n    .then(data => {\n      let cryptoNames = data.user.cryptos.map((crypto) => {\n        return crypto.name\n      })\n      // console.log(cryptoNames)\n      // console.log(data.user.cryptos)\n      if(!cryptoNames.includes(crypto.name)){\n        setTimeout(() => this.setState({\n          currentCrypto: null,\n          lookingAtSingleCrypto: false,\n        }), 2000)\n      }\n\n\n      this.setError(`Deleted ${crypto.name} from Cryptos`)\n      this.displayUserCryptos()\n    })\n\n  }\n\nsetNews = () => {\n  this.setState({\n    hasClickedNewsDBButton: true\n  })\n}\n\nreturnHomeNews = () => {\n  this.setState({\n    currentNewsArticle: null,\n    lookingAtSingleNewsArticle: false,\n    hasClickedNewsDBButton: false\n  })\n}\n\n  toggleNews = () => {\n    this.setState({\n      hasClickedNewsDBButton: !this.state.hasClickedNewsDBButton\n    })\n  }\n\n  setCurrentNewsArticle = (article) => {\n    this.setState({\n      currentNewsArticle: article,\n      lookingAtSingleNewsArticle: true\n    })\n  }\n\n  // returnToHomepageFromNewsContainer = () => {\n  //   console.log(\"hello\")\n  //   this.setState({\n  //     // cryptosAreLoading: true,\n  //     currentNewsArticle: null,\n  //     lookingAtSingleNewsArticle: false,\n  //     hasClickedNewsDBButton: true\n  //   })\n  // }\n\n  returnToNewsContainer = () => {\n    this.setState({\n      currentNewsArticle: null,\n      lookingAtSingleNewsArticle: false,\n      hasClickedNewsDBButton: true\n    })\n  }\n\nrenderNews = () => {\n  const {news} = this.state\n  if(this.state.hasClickedNewsDBButton === true){\n    return <NewsContainer\n            returnToHomepageFromNewsContainer={this.returnToHomepageFromNewsContainer}\n            toggleNews={this.toggleNews}\n            setCurrentNewsArticle={this.setCurrentNewsArticle}\n            news={news}\n            currentNewsArticle={this.state.currentNewsArticle}\n            lookingAtSingleNewsArticle={this.state.lookingAtSingleNewsArticle}\n            />\n  }\n}\n\nrenderDetailedViewNews = () => {\n  const {news, currentNewsArticle} = this.state\n  if(this.state.lookingAtSingleNewsArticle === true) {\n    return(\n      <div>\n        <NewsContainer\n                returnToHomepageFromNewsContainer={this.returnToHomepageFromNewsContainer}\n                toggleNews={this.toggleNews}\n                setCurrentNewsArticle={this.setCurrentNewsArticle}\n                news={news}\n                currentNewsArticle={this.state.currentNewsArticle}\n                lookingAtSingleNewsArticle={this.state.lookingAtSingleNewsArticle}\n                />\n                <ArticleView\n                currentNewsArticle={currentNewsArticle}\n                returnToNewsContainer={this.returnToNewsContainer}\n                />\n      </div>\n        )\n  }\n}\n\nrenderEditUser = () => {\nif(this.state.hasClickedSettings === true) {\n  return <EditUserContainer\n            current_user={this.state.current_user}\n            updateUser={this.updateUser}\n            deleteUser={this.deleteUser}\n            setEdit={this.setEdit}\n          />\n}\n}\n\nsetEdit = () => {\n  console.log(\"hello\")\n  this.setState({\n    hasClickedSettings: !this.state.hasClickedSettings\n  })\n}\n\n  render(){\n\n    return (\n      <div className=\"App\">\n        <Route path='/' render={() => <Banner current_user={this.state.current_user}\n\n\n                                              logout={this.logout}\n                                              displayUserCryptos={this.displayUserCryptos}\n                                              returnMainMenu={this.returnMainMenu}\n                                              returnMainMenu1={this.returnMainMenu1}\n                                              hasClickedMyCryptos={this.state.hasClickedMyCryptos}\n                                              setNewsState={this.setNewsState}\n                                              setEdit={this.setEdit}\n\n                                              />}/>\n        <main className=\"main\">\n          <Route exact path=\"/news\" render={() => this.renderDetailedNewsView()} />\n          {this.renderNews()}\n          <Route exact path=\"/login\" render={() => <Login attemptLogin={this.attemptLogin}/>}/>\n          <Route exact path=\"/user_signup\" render={() => <NewUserForm createNewUser={this.createNewUser}/>}/>\n          <Route path='/my-crypto' render={() => this.renderDetailedView()} />\n          {this.renderUserCryptos()}\n          <Route exact path=\"/dashboard\" render={() =>  <Dashboard\n                                                         setFeedback={this.setFeedback}\n                                                         feedback={this.state.feedback}\n                                                         />}\n                                                         />\n                                                       <Route exact path=\"/update_profile\" render={() => this.renderEditUser()}/>\n        </main>\n\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}