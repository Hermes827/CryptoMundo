{"ast":null,"code":"var _jsxFileName = \"/Users/chriscable/Desktop/projects/CryptoMundo/frontend/src/App.js\";\nimport React from 'react';\nimport Login from './components/login';\nimport Dashboard from './components/Dashboard';\nimport NewUserForm from './components/NewUserForm';\nimport { Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport centerConsole from './containers/centerConsole';\nimport EditUserContainer from './containers/EditUserContainer';\nimport './App.css';\nimport UserCryptosContainer from './containers/UserCryptosContainer';\nimport UserCryptoDetailedView from './components/UserCryptoDetailedView';\nimport NewsContainer from './containers/newsContainer';\nimport ArticleView from './components/articleView';\nimport { NEWS_API } from './constants';\nimport { USER_URL } from './constants';\nimport { LOGIN_URL } from './constants';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getNews = () => {\n      fetch(NEWS_API).then(res => res.json()).then(data => {\n        this.setState({\n          news: data.articles\n        });\n      });\n    };\n\n    this.setCurrentNewsArticle = article => {\n      this.setState({\n        currentNewsArticle: article,\n        lookingAtSingleNewsArticle: true\n      });\n    };\n\n    this.renderDetailedNewsView = () => {\n      const _this$state = this.state,\n            currentNewsArticle = _this$state.currentNewsArticle,\n            lookingAtSingleNewsArticle = _this$state.lookingAtSingleNewsArticle;\n\n      if (lookingAtSingleNewsArticle === true) {\n        return React.createElement(ArticleView, {\n          currentNewsArticle: currentNewsArticle,\n          returnToNewsContainer: this.returnToNewsContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.returnToNewsContainer = () => {\n      this.setState({\n        currentNewsArticle: null,\n        lookingAtSingleNewsArticle: false\n      });\n    };\n\n    this.returnToHomepageFromNewsContainer = () => {\n      this.setState({\n        currentNewsArticle: null,\n        lookingAtSingleNewsArticle: false\n      });\n      this.props.history.push('/centerConsole');\n    };\n\n    this.state = {\n      current_user: {},\n      error: \"\",\n      feedback: \"\",\n      userCryptos: [],\n      currentCrypto: {},\n      lookingAtSingleCrypto: false,\n      cryptosAreLoading: false,\n      news: [],\n      currentNewsArticle: {},\n      lookingAtSingleNewsArticle: false\n    };\n    this.createNewUser = this.createNewUser.bind(this);\n    this.attemptLogin = this.attemptLogin.bind(this);\n    this.setActiveUser = this.setActiveUser.bind(this);\n    this.logout = this.logout.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n    this.setError = this.setError.bind(this);\n    this.setFeedback = this.setFeedback.bind(this);\n    this.renewState();\n  }\n\n  setFeedback(str) {\n    this.setState({\n      feedback: str\n    });\n    setTimeout(() => this.setState({\n      feedback: \"\"\n    }), 1500);\n  }\n\n  setError(str) {\n    this.setState({\n      error: str\n    });\n    setTimeout(() => this.setState({\n      error: \"\"\n    }), 1500);\n  } // user stuff\n\n\n  renewState() {\n    if (!localStorage.token) {\n      return;\n    }\n\n    fetch(\"http://localhost:3000/api/v1/profile\", {\n      method: \"GET\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    }).then(res => res.json()).then(data => this.setActiveUser(data, \"soft\"));\n  }\n\n  setActiveUser(data, mode = \"hard\") {\n    if (data.message && mode === \"soft\") {\n      return;\n    } else if (data.message) {\n      this.setState({\n        error: data.message\n      });\n    } else {\n      this.setState({\n        current_user: data.user,\n        error: \"\"\n      });\n\n      if (data.jwt) {\n        localStorage.token = data.jwt;\n      }\n    }\n  }\n\n  createNewUser(user) {\n    fetch(USER_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n      this.props.history.push('/centerConsole');\n    });\n  }\n\n  updateUser(user) {\n    fetch(USER_URL + \"/\".concat(user.id), {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.token,\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n      this.props.history.push('/centerConsole');\n    });\n  }\n\n  deleteUser(user) {\n    fetch(USER_URL + \"/\".concat(user.id), {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    }).then(() => this.logout());\n  } // login\n\n\n  attemptLogin(user) {\n    fetch(LOGIN_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(res => res.json()).then(data => {\n      this.setActiveUser(data);\n\n      if (!data.message) {\n        this.props.history.push('/centerConsole');\n      }\n    });\n  }\n\n  logout() {\n    this.setState({\n      current_user: {},\n      currentCrypto: {}\n    });\n    delete localStorage.token;\n    this.props.history.push('/login');\n  } // Usercrypto\n  // displayUserCryptos = () => {\n  //   if(!localStorage.token){return}\n  //   fetch(\"http://localhost:3000/api/v1/profile\", {\n  //     method: \"GET\",\n  //     headers: {\n  //       'Authorization': \"Bearer \" + localStorage.token,\n  //     }\n  //   })\n  //   .then(res => res.json())\n  //   .then(data => {\n  //     this.setState({\n  //       userCryptos: data.user.cryptos\n  //       // cryptosAreLoading: false\n  //     })\n  //   })\n  // }\n  //\n  // setCurrentCrypto = (crypto) => {\n  //   this.setState({\n  //     currentCrypto: crypto,\n  //     lookingAtSingleCrypto: true\n  //   })\n  //   this.props.history.push('/my-crypto/' + crypto.id)\n  // }\n  //\n  // // countCrypto = (cc) => {\n  // //   const cryptos = []\n  // //   this.state.userCryptos.map((crypto) => {\n  // //     if(cc.name === crypto.name) {\n  // //       cryptos.push(crypto)\n  // //     }\n  // //   })\n  // //   return cryptos.length\n  // // }\n  //\n  // renderDetailedUserCryptoView = () => {\n  //   const {currentCrypto, lookingAtSingleCrypto} = this.state\n  //   if(lookingAtSingleCrypto === true) {\n  //     return(\n  //       <div>\n  //       <UserCryptoDetailedView\n  //       countCrypto={this.countCrypto}\n  //       currentCrypto={currentCrypto}\n  //       returnToUserCryptosContainer={this.returnToUserCryptosContainer}\n  //       deleteCrypto={this.deleteCrypto}\n  //       error={this.state.error}\n  //       />\n  //       </div>\n  //         )\n  //   }\n  // }\n  //\n  // returnToUserCryptosContainer = () => {\n  //   this.setState({\n  //     currentCrypto: null,\n  //     lookingAtSingleCrypto: false,\n  //   })\n  // }\n  //\n  // returnToHomepageFromCryptosContainers = () => {\n  //   this.setState({\n  //     currentCrypto: null,\n  //     lookingAtSingleCrypto: false\n  //   })\n  //   this.props.history.push('/centerConsole')\n  // }\n  //\n  //\n  // deleteCrypto = (crypto) => {\n  //   fetch(\"http://localhost:3000/api/v1/remove_crypto/\"+ crypto.id, {\n  //     method: \"DELETE\",\n  //     headers: {\n  //       'Authorization': \"Bearer \" + localStorage.token\n  //     },\n  //     body: JSON.stringify({crypto_id: crypto.id})\n  //   })\n  //   .then(res => res.json())\n  //   .then(data => {\n  //     let cryptoNames = data.user.cryptos.map((crypto) => {\n  //       return crypto.name\n  //     })\n  //     if(!cryptoNames.includes(crypto.name)){\n  //       setTimeout(() => this.setState({\n  //         currentCrypto: null,\n  //         lookingAtSingleCrypto: false,\n  //       }), 2000)\n  //     }\n  //     this.setError(\"Deleted ${crypto.name} from Cryptos\")\n  //     this.displayUserCryptos()\n  //   })\n  // }\n  //  news\n\n\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      render: () => React.createElement(Dashboard, {\n        current_user: this.state.current_user,\n        logout: this.logout,\n        displayUserCryptos: this.displayUserCryptos,\n        getNews: this.getNews,\n        setEdit: this.setEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/news\",\n      render: () => React.createElement(NewsContainer, {\n        returnToHomepageFromNewsContainer: this.returnToHomepageFromNewsContainer,\n        setCurrentNewsArticle: this.setCurrentNewsArticle,\n        news: this.state.news,\n        currentNewsArticle: this.state.currentNewsArticle,\n        lookingAtSingleNewsArticle: this.state.lookingAtSingleNewsArticle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), this.renderDetailedNewsView(), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => React.createElement(Login, {\n        attemptLogin: this.attemptLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/user_signup\",\n      render: () => React.createElement(NewUserForm, {\n        createNewUser: this.createNewUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/my-crypto\",\n      render: () => React.createElement(UserCryptosContainer, {\n        returnToHomepageFromCryptosContainers: this.returnToHomepageFromCryptosContainers,\n        userCryptos: this.state.userCryptos,\n        setCurrentCrypto: this.setCurrentCrypto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/centerConsole\",\n      render: () => React.createElement(centerConsole, {\n        setFeedback: this.setFeedback,\n        feedback: this.state.feedback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/update_profile\",\n      render: () => React.createElement(EditUserContainer, {\n        current_user: this.state.current_user,\n        updateUser: this.updateUser,\n        deleteUser: this.deleteUser,\n        setEdit: this.setEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(App); // {this.renderDetailedUserCryptoView()}","map":{"version":3,"sources":["/Users/chriscable/Desktop/projects/CryptoMundo/frontend/src/App.js"],"names":["React","Login","Dashboard","NewUserForm","Route","withRouter","centerConsole","EditUserContainer","UserCryptosContainer","UserCryptoDetailedView","NewsContainer","ArticleView","NEWS_API","USER_URL","LOGIN_URL","App","Component","constructor","props","getNews","fetch","then","res","json","data","setState","news","articles","setCurrentNewsArticle","article","currentNewsArticle","lookingAtSingleNewsArticle","renderDetailedNewsView","state","returnToNewsContainer","returnToHomepageFromNewsContainer","history","push","current_user","error","feedback","userCryptos","currentCrypto","lookingAtSingleCrypto","cryptosAreLoading","createNewUser","bind","attemptLogin","setActiveUser","logout","updateUser","deleteUser","setError","setFeedback","renewState","str","setTimeout","localStorage","token","method","headers","mode","message","user","jwt","body","JSON","stringify","id","render","displayUserCryptos","setEdit","returnToHomepageFromCryptosContainers","setCurrentCrypto"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Login from './components/login';\nimport Dashboard from './components/Dashboard'\nimport NewUserForm from './components/NewUserForm'\nimport { Route } from 'react-router-dom';\nimport {withRouter} from 'react-router';\nimport centerConsole from './containers/centerConsole'\nimport EditUserContainer from './containers/EditUserContainer'\nimport './App.css';\nimport UserCryptosContainer from './containers/UserCryptosContainer'\nimport UserCryptoDetailedView from './components/UserCryptoDetailedView'\nimport NewsContainer from './containers/newsContainer'\nimport ArticleView from './components/articleView'\nimport {NEWS_API} from './constants'\nimport {USER_URL} from './constants'\nimport {LOGIN_URL} from './constants'\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      current_user: {},\n      error: \"\",\n      feedback: \"\",\n      userCryptos: [],\n      currentCrypto: {},\n      lookingAtSingleCrypto: false,\n      cryptosAreLoading: false,\n      news: [],\n      currentNewsArticle: {},\n      lookingAtSingleNewsArticle: false\n    }\n\n    this.createNewUser = this.createNewUser.bind(this)\n    this.attemptLogin = this.attemptLogin.bind(this)\n    this.setActiveUser = this.setActiveUser.bind(this)\n    this.logout = this.logout.bind(this)\n    this.updateUser = this.updateUser.bind(this)\n    this.deleteUser = this.deleteUser.bind(this)\n    this.setError = this.setError.bind(this)\n    this.setFeedback = this.setFeedback.bind(this)\n    this.renewState();\n  }\n\n  setFeedback(str){\n    this.setState({\n      feedback: str\n    })\n    setTimeout(() => this.setState({feedback: \"\"}), 1500)\n  }\n\n  setError(str){\n    this.setState({\n      error: str\n    })\n    setTimeout(() => this.setState({error: \"\"}), 1500)\n  }\n\n  // user stuff\n\n  renewState(){\n  if(!localStorage.token){return}\n  fetch(\"http://localhost:3000/api/v1/profile\", {\n    method: \"GET\",\n    headers: {\n      'Authorization': \"Bearer \" + localStorage.token\n    }\n  })\n  .then(res => res.json())\n  .then(data => this.setActiveUser(data, \"soft\"))\n}\n\n  setActiveUser(data, mode=\"hard\"){\n    if(data.message && mode === \"soft\"){\n      return\n    } else if(data.message){\n      this.setState({error: data.message})\n    } else {\n      this.setState({\n        current_user: data.user,\n        error: \"\"\n      })\n      if(data.jwt){localStorage.token = data.jwt}\n    }\n  }\n\n  createNewUser(user){\n    fetch(USER_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({user})\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      this.props.history.push('/centerConsole')\n    })\n  }\n\n  updateUser(user){\n    fetch(USER_URL + `/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.token,\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({user})\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      this.props.history.push('/centerConsole')\n    })\n  }\n\n  deleteUser(user){\n    fetch(USER_URL + `/${user.id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': \"Bearer \" + localStorage.token\n      }\n    })\n    .then( () => this.logout())\n  }\n\n  // login\n\n  attemptLogin(user){\n    fetch(LOGIN_URL, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({user})\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setActiveUser(data)\n      if(!data.message){\n        this.props.history.push('/centerConsole')\n      }\n    })\n  }\n\n  logout(){\n    this.setState({\n      current_user: {},\n      currentCrypto: {}\n    })\n    delete localStorage.token\n    this.props.history.push('/login')\n  }\n\n  // Usercrypto\n\n  // displayUserCryptos = () => {\n  //   if(!localStorage.token){return}\n  //   fetch(\"http://localhost:3000/api/v1/profile\", {\n  //     method: \"GET\",\n  //     headers: {\n  //       'Authorization': \"Bearer \" + localStorage.token,\n  //     }\n  //   })\n  //   .then(res => res.json())\n  //   .then(data => {\n  //     this.setState({\n  //       userCryptos: data.user.cryptos\n  //       // cryptosAreLoading: false\n  //     })\n  //   })\n  // }\n  //\n  // setCurrentCrypto = (crypto) => {\n  //   this.setState({\n  //     currentCrypto: crypto,\n  //     lookingAtSingleCrypto: true\n  //   })\n  //   this.props.history.push('/my-crypto/' + crypto.id)\n  // }\n  //\n  // // countCrypto = (cc) => {\n  // //   const cryptos = []\n  // //   this.state.userCryptos.map((crypto) => {\n  // //     if(cc.name === crypto.name) {\n  // //       cryptos.push(crypto)\n  // //     }\n  // //   })\n  // //   return cryptos.length\n  // // }\n  //\n  // renderDetailedUserCryptoView = () => {\n  //   const {currentCrypto, lookingAtSingleCrypto} = this.state\n  //   if(lookingAtSingleCrypto === true) {\n  //     return(\n  //       <div>\n  //       <UserCryptoDetailedView\n  //       countCrypto={this.countCrypto}\n  //       currentCrypto={currentCrypto}\n  //       returnToUserCryptosContainer={this.returnToUserCryptosContainer}\n  //       deleteCrypto={this.deleteCrypto}\n  //       error={this.state.error}\n  //       />\n  //       </div>\n  //         )\n  //   }\n  // }\n  //\n  // returnToUserCryptosContainer = () => {\n  //   this.setState({\n  //     currentCrypto: null,\n  //     lookingAtSingleCrypto: false,\n  //   })\n  // }\n  //\n  // returnToHomepageFromCryptosContainers = () => {\n  //   this.setState({\n  //     currentCrypto: null,\n  //     lookingAtSingleCrypto: false\n  //   })\n  //   this.props.history.push('/centerConsole')\n  // }\n  //\n  //\n  // deleteCrypto = (crypto) => {\n  //   fetch(\"http://localhost:3000/api/v1/remove_crypto/\"+ crypto.id, {\n  //     method: \"DELETE\",\n  //     headers: {\n  //       'Authorization': \"Bearer \" + localStorage.token\n  //     },\n  //     body: JSON.stringify({crypto_id: crypto.id})\n  //   })\n  //   .then(res => res.json())\n  //   .then(data => {\n  //     let cryptoNames = data.user.cryptos.map((crypto) => {\n  //       return crypto.name\n  //     })\n  //     if(!cryptoNames.includes(crypto.name)){\n  //       setTimeout(() => this.setState({\n  //         currentCrypto: null,\n  //         lookingAtSingleCrypto: false,\n  //       }), 2000)\n  //     }\n  //     this.setError(\"Deleted ${crypto.name} from Cryptos\")\n  //     this.displayUserCryptos()\n  //   })\n  // }\n\n//  news\n\ngetNews = () => {\n  fetch(NEWS_API)\n    .then(res => res.json())\n    .then(data => {\n      this.setState({\n        news: data.articles\n      })\n    })\n}\n\nsetCurrentNewsArticle = (article) => {\n  this.setState({\n    currentNewsArticle: article,\n    lookingAtSingleNewsArticle: true\n  })\n}\n\nrenderDetailedNewsView = () => {\nconst {currentNewsArticle, lookingAtSingleNewsArticle} = this.state\nif(lookingAtSingleNewsArticle === true) {\n    return (\n          <ArticleView\n          currentNewsArticle={currentNewsArticle}\n          returnToNewsContainer={this.returnToNewsContainer}\n          />\n        )\n  }\n}\n\nreturnToNewsContainer = () => {\n  this.setState({\n    currentNewsArticle: null,\n    lookingAtSingleNewsArticle: false\n  })\n}\n\nreturnToHomepageFromNewsContainer = () => {\n  this.setState({\n    currentNewsArticle: null,\n    lookingAtSingleNewsArticle: false\n  })\n  this.props.history.push('/centerConsole')\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n\n  render(){\n\n    return (\n      <div className=\"App\">\n        <Route path='/' render={() => <Dashboard\n                                      current_user={this.state.current_user}\n                                      logout={this.logout}\n                                      displayUserCryptos={this.displayUserCryptos}\n                                      getNews={this.getNews}\n                                      setEdit={this.setEdit}\n                                      />}/>\n\n          <Route exact path=\"/news\" render={() => <NewsContainer\n                                                  returnToHomepageFromNewsContainer={this.returnToHomepageFromNewsContainer}\n                                                  setCurrentNewsArticle={this.setCurrentNewsArticle}\n                                                  news={this.state.news}\n                                                  currentNewsArticle={this.state.currentNewsArticle}\n                                                  lookingAtSingleNewsArticle={this.state.lookingAtSingleNewsArticle}\n                                                  />}/>\n                                                  {this.renderDetailedNewsView()}\n\n          <Route exact path=\"/login\" render={() => <Login attemptLogin={this.attemptLogin}/>}/>\n\n          <Route exact path=\"/user_signup\" render={() => <NewUserForm createNewUser={this.createNewUser}/>}/>\n\n          <Route path='/my-crypto' render={() => <UserCryptosContainer\n                                                  returnToHomepageFromCryptosContainers={this.returnToHomepageFromCryptosContainers}\n                                                  userCryptos={this.state.userCryptos}\n                                                  setCurrentCrypto={this.setCurrentCrypto}\n                                                  />}/>\n\n\n          <Route exact path=\"/centerConsole\" render={() =>  <centerConsole\n                                                         setFeedback={this.setFeedback}\n                                                         feedback={this.state.feedback}\n                                                         />}/>\n\n          <Route exact path=\"/update_profile\" render={() => <EditUserContainer\n                                                            current_user={this.state.current_user}\n                                                            updateUser={this.updateUser}\n                                                            deleteUser={this.deleteUser}\n                                                            setEdit={this.setEdit}\n                                                            />}/>\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n\n\n  // {this.renderDetailedUserCryptoView()}\n"]},"metadata":{},"sourceType":"module"}