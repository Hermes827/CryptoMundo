{"ast":null,"code":"var _jsxFileName = \"/Users/chriscable/Desktop/backup/module_5_project/cryptoproject_frontend1/src/containers/Dashboard.js\";\nimport React, { Component } from 'react';\nimport CryptosContainer from './cryptosContainer';\nimport CryptoNameForm from '../components/cryptoNameForm';\nimport { Redirect } from 'react-router-dom';\nimport DetailedView from '../components/detailedView';\nconst URL = \"http://localhost:3000/api/v1/searchbyname\";\nconst random = document.getElementsByClassName(\"title\");\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getCryptosName = event => {\n      this.setLoading(); // const title = document.getElementsByClassName(\"forms\")\n      // console.log(title)\n      // title.classList.add(\"hide-title\")\n\n      fetch(URL).then(res => res.json()).then(data => {\n        this.setState({\n          cryptos: data,\n          cryptosAreLoading: false\n        });\n      });\n    };\n\n    this.setCurrentCrypto = crypto => {\n      this.setState({\n        currentCrypto: crypto,\n        lookingAtSingleCrypto: true\n      });\n    };\n\n    this.returnMainMenu = () => {\n      this.setState({\n        currentCrypto: null,\n        lookingAtSingleCrypto: false\n      });\n    };\n\n    this.addCrypto = crypto => {\n      fetch(\"http://localhost:3000/api/v1/add_crypto\", {\n        method: 'POST',\n        body: JSON.stringify({\n          crypto_id: crypto.id\n        }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.token\n        }\n      }).then(res => res.json()).then(data => {// this.props.setFeedback(`Added ${crypto.name} to \"My Cryptos\"`)\n      });\n    };\n\n    this.returnHome = () => {\n      console.log(\"hello\");\n      this.setState({\n        cryptosAreLoading: true\n      });\n    };\n\n    this.state = {\n      cryptos: [],\n      lookingAtSingleCrypto: false,\n      currentCrypto: {},\n      cryptosAreLoading: false\n    };\n  }\n\n  setLoading() {\n    this.setState({\n      CryptosAreLoading: true\n    });\n  }\n\n  renderCryptos() {\n    if (this.state.cryptos.length === 0 && !this.state.cryptosAreLoading) {\n      return null;\n    } else if (!this.state.cryptosAreLoading) {\n      return React.createElement(\"div\", {\n        className: \"cryptosContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"View Cryptos\"), React.createElement(CryptosContainer, {\n        cryptos: this.state.cryptos,\n        setCurrentCrypto: this.setCurrentCrypto,\n        returnHome: this.returnHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    }\n  }\n\n  renderDetailedUserCryptoView() {\n    const currentCrypto = this.state.currentCrypto;\n\n    if (this.state.lookingAtSingleCrypto === true) {\n      return React.createElement(DetailedView, {\n        currentCrypto: currentCrypto,\n        returnMainMenu: this.returnMainMenu,\n        addCrypto: this.addCrypto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    if (!localStorage.token) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.renderCryptos(), React.createElement(\"div\", {\n      className: \"forms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"My Crypto\"), React.createElement(CryptoNameForm, {\n      getCryptosName: this.getCryptosName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), this.renderDetailedUserCryptoView());\n  }\n\n}","map":{"version":3,"sources":["/Users/chriscable/Desktop/backup/module_5_project/cryptoproject_frontend1/src/containers/Dashboard.js"],"names":["React","Component","CryptosContainer","CryptoNameForm","Redirect","DetailedView","URL","random","document","getElementsByClassName","Dashboard","constructor","props","getCryptosName","event","setLoading","fetch","then","res","json","data","setState","cryptos","cryptosAreLoading","setCurrentCrypto","crypto","currentCrypto","lookingAtSingleCrypto","returnMainMenu","addCrypto","method","body","JSON","stringify","crypto_id","id","headers","localStorage","token","returnHome","console","log","state","CryptosAreLoading","renderCryptos","length","renderDetailedUserCryptoView","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CryptosContainer from './cryptosContainer'\nimport CryptoNameForm from '../components/cryptoNameForm'\nimport {Redirect} from 'react-router-dom'\nimport DetailedView from '../components/detailedView'\n\nconst URL = \"http://localhost:3000/api/v1/searchbyname\"\nconst random = document.getElementsByClassName(\"title\")\n\nexport default class Dashboard extends Component {\n\n  constructor(props){\n    super(props)\n      this.state = {\n        cryptos: [],\n        lookingAtSingleCrypto: false,\n        currentCrypto: {},\n        cryptosAreLoading: false\n      }\n    }\n\n  getCryptosName = (event) => {\n    this.setLoading()\n\n    // const title = document.getElementsByClassName(\"forms\")\n    // console.log(title)\n    // title.classList.add(\"hide-title\")\n    fetch(URL)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          cryptos: data,\n          cryptosAreLoading: false\n        })\n      })\n\n  }\n\n\n  setCurrentCrypto = (crypto) => {\n    this.setState({\n      currentCrypto: crypto,\n      lookingAtSingleCrypto: true\n    })\n\n  }\n\n  setLoading(){\n    this.setState({CryptosAreLoading: true})\n  }\n\n  returnMainMenu = () => {\n\n    this.setState({\n      currentCrypto: null,\n      lookingAtSingleCrypto: false\n    })\n  }\n\n\n  addCrypto = (crypto) => {\n    fetch(\"http://localhost:3000/api/v1/add_crypto\", {\n      method: 'POST',\n      body: JSON.stringify({crypto_id: crypto.id}),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.token\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      // this.props.setFeedback(`Added ${crypto.name} to \"My Cryptos\"`)\n    })\n  }\n\nreturnHome = () => {\n  console.log(\"hello\")\n  this.setState({\n    cryptosAreLoading: true\n  })\n}\n\n\n  renderCryptos() {\n    if(this.state.cryptos.length === 0 && !this.state.cryptosAreLoading){\n      return null\n    } else if (!this.state.cryptosAreLoading){\n      return  <div className=\"cryptosContainer\">\n        <h2 className=\"card-title\">View Cryptos</h2>\n        <CryptosContainer\n          cryptos={this.state.cryptos}\n          setCurrentCrypto={this.setCurrentCrypto}\n          returnHome={this.returnHome}\n          />\n      </div>\n    }\n  }\n\n\n  renderDetailedUserCryptoView(){\n    const {currentCrypto} = this.state\n    if(this.state.lookingAtSingleCrypto === true) {\n      return <DetailedView\n              currentCrypto={currentCrypto}\n              returnMainMenu={this.returnMainMenu}\n              addCrypto={this.addCrypto}\n              />\n    }\n  }\n\n  render(){\n    if(!localStorage.token){\n      return <Redirect to=\"/login\" />\n    }\n\n    return (\n\n        <div className=\"App\">\n            {this.renderCryptos()}\n\n          <div className=\"forms\">\n            <h1 className=\"title\">My Crypto</h1>\n            <CryptoNameForm getCryptosName={this.getCryptosName}/>\n\n          <br/>\n          </div>\n          {this.renderDetailedUserCryptoView()}\n        </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}