{"ast":null,"code":"var _jsxFileName = \"/Users/chriscable/Desktop/module_5_project/cryptoproject_frontend1/src/containers/UserCryptosContainer.js\";\nimport React from 'react';\nimport UserCrypto from '../components/UserCrypto';\n\nclass UserCryptosContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getPrices = () => {\n      const values = [];\n      this.props.userCryptos.map(crypto => {\n        values.push(parseInt(crypto.price));\n      });\n\n      if (values.length >= 1) {\n        let total = values.reduce((x, y) => x + y);\n        return total;\n      }\n\n      let total = 0;\n      return total;\n    };\n\n    this.countCrypto = cc => {\n      const cryptos = [];\n      this.props.userCryptos.map(crypto => {\n        if (cc.name === crypto.name) {\n          cryptos.push(crypto);\n          console.log(crypto);\n        }\n      });\n      return cryptos.length;\n    };\n\n    this.distinctCrypto = () => {\n      const cryptos = this.props.userCryptos.map(crypto => {\n        return crypto.name;\n      });\n      const distinctCryptos = [...new Set(cryptos)];\n      const newArray = this.props.userCryptos.filter(crypto => {\n        console.log(crypto.name);\n        return distinctCryptos.includes(crypto.name);\n      });\n      console.log(newArray);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"userCryptos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"My Cryptocurrencies\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Total portfolio value: $\", this.getPrices()), React.createElement(\"button\", {\n      className: \"CCbutton\",\n      onClick: this.props.returnToHomepageFromCryptosContainers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Return to homepage\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.distinctCrypto(), this.props.userCryptos.map(crypto => {\n      return React.createElement(UserCrypto, {\n        countCrypto: this.countCrypto,\n        key: \"user-\" + crypto.name + \"-\" + crypto.id,\n        toggleCryptos: this.props.toggleCryptos,\n        crypto: crypto,\n        setCurrentCrypto: this.props.setCurrentCrypto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default UserCryptosContainer;","map":{"version":3,"sources":["/Users/chriscable/Desktop/module_5_project/cryptoproject_frontend1/src/containers/UserCryptosContainer.js"],"names":["React","UserCrypto","UserCryptosContainer","Component","getPrices","values","props","userCryptos","map","crypto","push","parseInt","price","length","total","reduce","x","y","countCrypto","cc","cryptos","name","console","log","distinctCrypto","distinctCryptos","Set","newArray","filter","includes","render","returnToHomepageFromCryptosContainers","id","toggleCryptos","setCurrentCrypto"],"mappings":"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","sourcesContent":["import React from 'react'\nimport UserCrypto from '../components/UserCrypto'\n\nclass UserCryptosContainer extends React.Component {\n\ngetPrices = () => {\n  const values = []\n  this.props.userCryptos.map((crypto)=> {\n    values.push(parseInt(crypto.price))\n  })\n  if(values.length >= 1) {\n  let total = values.reduce((x, y) => x + y)\n  return total\n}\n  let total  = 0\n  return total\n}\n\ncountCrypto = (cc) => {\n  const cryptos = []\n  this.props.userCryptos.map((crypto) => {\n    if(cc.name === crypto.name) {\n      cryptos.push(crypto)\n      console.log(crypto)\n    }\n  })\n  return cryptos.length\n}\n\ndistinctCrypto = () => {\n  const cryptos = this.props.userCryptos.map((crypto)=> {\n    return crypto.name\n  })\n  const distinctCryptos = [...new Set(cryptos)]\n  const newArray = this.props.userCryptos.filter((crypto) => {\n    console.log(crypto.name)\n    return distinctCryptos.includes(crypto.name)\n  })\n  console.log(newArray)\n}\n\n  render(){\n    return(\n      <div className=\"userCryptos\">\n      <h1>My Cryptocurrencies</h1>\n      <h2>Total portfolio value: ${this.getPrices()}</h2>\n      <button className=\"CCbutton\" onClick={this.props.returnToHomepageFromCryptosContainers}>Return to homepage</button>\n\n      <div>\n      {this.distinctCrypto()}\n      {this.props.userCryptos.map((crypto)=>{\n        return <UserCrypto\n                countCrypto={this.countCrypto}\n                key={\"user-\"+crypto.name+\"-\"+crypto.id}\n                toggleCryptos={this.props.toggleCryptos}\n                crypto={crypto}\n                setCurrentCrypto={this.props.setCurrentCrypto}\n                />\n      })}\n      </div>\n      </div>\n    )\n  }\n\n}\n\nexport default UserCryptosContainer\n"]},"metadata":{},"sourceType":"module"}