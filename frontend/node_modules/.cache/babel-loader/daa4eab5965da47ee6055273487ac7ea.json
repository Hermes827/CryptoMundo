{"ast":null,"code":"var _jsxFileName = \"/Users/chriscable/Desktop/projects/CryptoMundo/frontend/src/containers/centerConsole.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport CryptosContainer from './cryptosContainer';\nimport CryptoNameForm from '../components/cryptoNameForm';\nimport CryptoDetailedView from '../components/CryptoDetailedView'; // const API = \"https://min-api.cryptocompare.com/data/top/totalvolfull?limit=10&tsym=USD&api_key={2eb0a0afcdbd0af89e90104132e9424984ac9324e5c2b62272a6afbe9567cb19}\"\n\nclass centerConsole extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setCurrentCrypto = crypto => {\n      this.setState({\n        currentCrypto: crypto,\n        lookingAtSingleCrypto: true\n      });\n    };\n\n    this.returnToCryptosContainer = () => {\n      this.setState({\n        currentCrypto: null,\n        lookingAtSingleCrypto: false\n      });\n    };\n\n    this.addCrypto = crypto => {\n      fetch(\"http://localhost:3000/api/v1/add_crypto\", {\n        method: 'POST',\n        body: JSON.stringify({\n          crypto_id: crypto.id\n        }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.token\n        }\n      }).then(res => res.json()).then(data => {\n        this.setFeedback(\"Added \".concat(crypto.name, \" to portfolio\"));\n      });\n    };\n\n    this.returnToHomepageFromCryptosContainers = () => {\n      this.setState({\n        currentCrypto: null,\n        lookingAtSingleCrypto: false\n      });\n    };\n\n    this.state = {\n      cryptos: [],\n      lookingAtSingleCrypto: false,\n      cryptoContainerIsOpen: false,\n      currentCrypto: {},\n      feedback: \"\",\n      cryptoContainerIsOpen: false\n    };\n  }\n\n  setFeedback(str) {\n    this.setState({\n      feedback: str\n    });\n    setTimeout(() => this.setState({\n      feedback: \"\"\n    }), 1500);\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/api/v1/searchbyname\").then(res => res.json()).then(data => {\n      this.setState({\n        cryptos: data\n      });\n    });\n  } // getCryptosName = () => {\n  //   fetch(\"http://localhost:3000/api/v1/searchbyname\")\n  //     .then(res => res.json())\n  //     .then(data => {\n  //       this.setState({\n  //         cryptos: data\n  //         })\n  //     })\n  // }\n\n\n  // renderCryptos() {\n  //   if(this.state.cryptoContainerIsOpen === true){\n  //     return  <div className=\"cryptosContainer\">\n  //       <h2 className=\"card-title\">View Cryptos</h2>\n  //       <CryptosContainer\n  //         cryptos={this.state.cryptos}\n  //         setCurrentCrypto={this.setCurrentCrypto}\n  //         returnToHomepageFromCryptosContainers={this.returnToHomepageFromCryptosContainers}\n  //         />\n  //     </div>\n  //   }\n  // }\n  turnOn() {\n    // this.setState({\n    //   cryptoContainerIsOpen: true\n    // })\n    console.log(\"hello\");\n  }\n\n  renderDetailedUserCryptoView() {\n    const _this$state = this.state,\n          currentCrypto = _this$state.currentCrypto,\n          lookingAtSingleCrypto = _this$state.lookingAtSingleCrypto;\n\n    if (lookingAtSingleCrypto === true) {\n      return React.createElement(CryptoDetailedView, {\n        feedback: this.state.feedback,\n        currentCrypto: currentCrypto,\n        returnToCryptosContainer: this.returnToCryptosContainer,\n        addCrypto: this.addCrypto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    // if(!localStorage.token){\n    //   return <Redirect to=\"/login\" />\n    // }\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"forms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Crypto Mundo\"), React.createElement(CryptoNameForm, {\n      turnOn: this.turnOn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), this.renderDetailedUserCryptoView());\n  }\n\n}\n\nexport default withRouter(centerConsole);","map":{"version":3,"sources":["/Users/chriscable/Desktop/projects/CryptoMundo/frontend/src/containers/centerConsole.js"],"names":["React","Component","Redirect","withRouter","CryptosContainer","CryptoNameForm","CryptoDetailedView","centerConsole","constructor","props","setCurrentCrypto","crypto","setState","currentCrypto","lookingAtSingleCrypto","returnToCryptosContainer","addCrypto","fetch","method","body","JSON","stringify","crypto_id","id","headers","localStorage","token","then","res","json","data","setFeedback","name","returnToHomepageFromCryptosContainers","state","cryptos","cryptoContainerIsOpen","feedback","str","setTimeout","componentDidMount","turnOn","console","log","renderDetailedUserCryptoView","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {withRouter} from 'react-router';\nimport CryptosContainer from './cryptosContainer'\nimport CryptoNameForm from '../components/cryptoNameForm'\nimport CryptoDetailedView from '../components/CryptoDetailedView'\n\n// const API = \"https://min-api.cryptocompare.com/data/top/totalvolfull?limit=10&tsym=USD&api_key={2eb0a0afcdbd0af89e90104132e9424984ac9324e5c2b62272a6afbe9567cb19}\"\n\nclass centerConsole extends Component {\n\n  constructor(props){\n    super(props)\n      this.state = {\n        cryptos: [],\n        lookingAtSingleCrypto: false,\n        cryptoContainerIsOpen: false,\n        currentCrypto: {},\n        feedback: \"\",\n        cryptoContainerIsOpen: false\n      }\n    }\n\n    setFeedback(str){\n      this.setState({\n        feedback: str\n      })\n      setTimeout(() => this.setState({feedback: \"\"}), 1500)\n    }\n\n    componentDidMount(){\n      fetch(\"http://localhost:3000/api/v1/searchbyname\")\n        .then(res => res.json())\n        .then(data => {\n          this.setState({\n            cryptos: data\n            })\n        })\n    }\n\n  // getCryptosName = () => {\n  //   fetch(\"http://localhost:3000/api/v1/searchbyname\")\n  //     .then(res => res.json())\n  //     .then(data => {\n  //       this.setState({\n  //         cryptos: data\n  //         })\n  //     })\n  // }\n\n  setCurrentCrypto = (crypto) => {\n    this.setState({\n      currentCrypto: crypto,\n      lookingAtSingleCrypto: true\n    })\n  }\n\n  returnToCryptosContainer = () => {\n    this.setState({\n      currentCrypto: null,\n      lookingAtSingleCrypto: false\n    })\n  }\n\n  addCrypto = (crypto) => {\n    fetch(\"http://localhost:3000/api/v1/add_crypto\", {\n      method: 'POST',\n      body: JSON.stringify({crypto_id: crypto.id}),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.token\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      this.setFeedback(`Added ${crypto.name} to portfolio`)\n    })\n  }\n\nreturnToHomepageFromCryptosContainers = () => {\n  this.setState({\n    currentCrypto: null,\n    lookingAtSingleCrypto: false\n  })\n}\n\n  // renderCryptos() {\n  //   if(this.state.cryptoContainerIsOpen === true){\n  //     return  <div className=\"cryptosContainer\">\n  //       <h2 className=\"card-title\">View Cryptos</h2>\n  //       <CryptosContainer\n  //         cryptos={this.state.cryptos}\n  //         setCurrentCrypto={this.setCurrentCrypto}\n  //         returnToHomepageFromCryptosContainers={this.returnToHomepageFromCryptosContainers}\n  //         />\n  //     </div>\n  //   }\n  // }\n\n  turnOn(){\n    // this.setState({\n    //   cryptoContainerIsOpen: true\n    // })\n    console.log(\"hello\")\n  }\n\n\n  renderDetailedUserCryptoView(){\n    const {currentCrypto, lookingAtSingleCrypto} = this.state\n    if(lookingAtSingleCrypto === true) {\n      return <CryptoDetailedView\n              feedback={this.state.feedback}\n              currentCrypto={currentCrypto}\n              returnToCryptosContainer={this.returnToCryptosContainer}\n              addCrypto={this.addCrypto}\n              />\n    }\n  }\n\n\n  render(){\n    // if(!localStorage.token){\n    //   return <Redirect to=\"/login\" />\n    // }\n\n    return (\n        <div className=\"App\">\n\n          <div className=\"forms\">\n            <h1 className=\"title\">Crypto Mundo</h1>\n            <CryptoNameForm turnOn={this.turnOn}/>\n          <br/>\n          </div>\n          {this.renderDetailedUserCryptoView()}\n        </div>\n    );\n  }\n}\n\nexport default withRouter(centerConsole)\n"]},"metadata":{},"sourceType":"module"}